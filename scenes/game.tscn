[gd_scene load_steps=82 format=3 uid="uid://cpk4fcs0wv1xi"]

[ext_resource type="PackedScene" uid="uid://chng2lswcty8j" path="res://scenes/hud.tscn" id="1_eqgwh"]
[ext_resource type="Shader" path="res://shaders/sky.gdshader" id="1_o5777"]
[ext_resource type="Script" path="res://scripts/follow_object.gd" id="1_qj05n"]
[ext_resource type="Texture2D" uid="uid://22nms3bagi6a" path="res://sprites/sky.png" id="2_c7d6x"]
[ext_resource type="Texture2D" uid="uid://dqf7fr5pkwonw" path="res://sprites/pixel_frog/Main Characters/Virtual Guy/Double Jump (32x32).png" id="2_qen2s"]
[ext_resource type="Texture2D" uid="uid://2650khnapabl" path="res://sprites/pixel_frog/Main Characters/Virtual Guy/Fall (32x32).png" id="3_43own"]
[ext_resource type="Texture2D" uid="uid://dfvtofblxa5dh" path="res://sprites/pixel_frog/Main Characters/Virtual Guy/Hit (32x32).png" id="4_pheil"]
[ext_resource type="Texture2D" uid="uid://dhqjqmsjfmdaa" path="res://sprites/pixel_frog/Main Characters/Virtual Guy/Idle (32x32).png" id="5_xrhgd"]
[ext_resource type="Texture2D" uid="uid://blm650m4rjfwr" path="res://sprites/pixel_frog/Main Characters/Virtual Guy/Jump (32x32).png" id="6_w0q2a"]
[ext_resource type="Texture2D" uid="uid://demmqigpvg7go" path="res://sprites/pixel_frog/Main Characters/Virtual Guy/Run (32x32).png" id="7_lfvx6"]
[ext_resource type="Texture2D" uid="uid://i54n04b800db" path="res://sprites/pixel_frog/Main Characters/Virtual Guy/Wall Jump (32x32).png" id="8_51ypd"]
[ext_resource type="Script" path="res://scripts/player/player_animator.gd" id="9_mxba0"]
[ext_resource type="Script" path="res://scripts/state_machine/state_machine.gd" id="10_anlff"]
[ext_resource type="Script" path="res://scripts/state_machine/player/player_idle_state.gd" id="11_m6vc4"]
[ext_resource type="Script" path="res://scripts/state_machine/player/player_walk_state.gd" id="12_vp861"]
[ext_resource type="Script" path="res://scripts/player/player_movement.gd" id="13_nk5fa"]
[ext_resource type="Script" path="res://scripts/player/player_movement_preset.gd" id="14_dmiqd"]
[ext_resource type="Script" path="res://scripts/player/player_jump.gd" id="15_rwm7j"]
[ext_resource type="Texture2D" uid="uid://c81hdcisi8mnj" path="res://sprites/pixel_frog/Terrain/Terrain (16x16).png" id="16_7wq30"]
[ext_resource type="Script" path="res://scripts/player/player_camera.gd" id="18_80blo"]
[ext_resource type="Script" path="res://scripts/player/player_camera_preset.gd" id="19_55u23"]
[ext_resource type="Script" path="res://scripts/utils/player_camera_debug.gd" id="20_opq1y"]

[sub_resource type="ShaderMaterial" id="ShaderMaterial_h605e"]
shader = ExtResource("1_o5777")
shader_parameter/speed_x = 0.015
shader_parameter/speed_y = 0.0

[sub_resource type="AtlasTexture" id="AtlasTexture_536v2"]
atlas = ExtResource("2_qen2s")
region = Rect2(0, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_4jrcq"]
atlas = ExtResource("2_qen2s")
region = Rect2(32, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_2j76e"]
atlas = ExtResource("2_qen2s")
region = Rect2(64, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_8l784"]
atlas = ExtResource("2_qen2s")
region = Rect2(96, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_ddpjc"]
atlas = ExtResource("2_qen2s")
region = Rect2(128, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_ysb67"]
atlas = ExtResource("2_qen2s")
region = Rect2(160, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_p0ft3"]
atlas = ExtResource("3_43own")
region = Rect2(0, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_7mcil"]
atlas = ExtResource("4_pheil")
region = Rect2(0, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_v47fi"]
atlas = ExtResource("4_pheil")
region = Rect2(32, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_ww3db"]
atlas = ExtResource("4_pheil")
region = Rect2(64, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_qk8no"]
atlas = ExtResource("4_pheil")
region = Rect2(96, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_xkn65"]
atlas = ExtResource("4_pheil")
region = Rect2(128, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_58cvo"]
atlas = ExtResource("4_pheil")
region = Rect2(160, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_ywu40"]
atlas = ExtResource("4_pheil")
region = Rect2(192, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_h3735"]
atlas = ExtResource("5_xrhgd")
region = Rect2(0, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_767bv"]
atlas = ExtResource("5_xrhgd")
region = Rect2(32, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_ai5jr"]
atlas = ExtResource("5_xrhgd")
region = Rect2(64, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_57gn1"]
atlas = ExtResource("5_xrhgd")
region = Rect2(96, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_xeup3"]
atlas = ExtResource("5_xrhgd")
region = Rect2(128, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_2rxyh"]
atlas = ExtResource("5_xrhgd")
region = Rect2(160, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_03rso"]
atlas = ExtResource("5_xrhgd")
region = Rect2(192, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_cv8pg"]
atlas = ExtResource("5_xrhgd")
region = Rect2(224, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_pdtkm"]
atlas = ExtResource("5_xrhgd")
region = Rect2(256, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_m0bkw"]
atlas = ExtResource("5_xrhgd")
region = Rect2(288, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_jqmun"]
atlas = ExtResource("5_xrhgd")
region = Rect2(320, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_b6hk5"]
atlas = ExtResource("6_w0q2a")
region = Rect2(0, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_w7qt3"]
atlas = ExtResource("7_lfvx6")
region = Rect2(0, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_n8vne"]
atlas = ExtResource("7_lfvx6")
region = Rect2(32, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_831to"]
atlas = ExtResource("7_lfvx6")
region = Rect2(64, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_nwbgj"]
atlas = ExtResource("7_lfvx6")
region = Rect2(96, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_ovrt7"]
atlas = ExtResource("7_lfvx6")
region = Rect2(128, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_f878o"]
atlas = ExtResource("7_lfvx6")
region = Rect2(160, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_l02v3"]
atlas = ExtResource("7_lfvx6")
region = Rect2(192, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_rp7kb"]
atlas = ExtResource("7_lfvx6")
region = Rect2(224, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_c3yjs"]
atlas = ExtResource("7_lfvx6")
region = Rect2(256, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_j4q22"]
atlas = ExtResource("7_lfvx6")
region = Rect2(288, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_01fgr"]
atlas = ExtResource("7_lfvx6")
region = Rect2(320, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_3jc3m"]
atlas = ExtResource("7_lfvx6")
region = Rect2(352, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_nrk44"]
atlas = ExtResource("8_51ypd")
region = Rect2(0, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_mj7h8"]
atlas = ExtResource("8_51ypd")
region = Rect2(32, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_w5jxv"]
atlas = ExtResource("8_51ypd")
region = Rect2(64, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_svjaf"]
atlas = ExtResource("8_51ypd")
region = Rect2(96, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_3prte"]
atlas = ExtResource("8_51ypd")
region = Rect2(128, 0, 32, 32)

[sub_resource type="SpriteFrames" id="SpriteFrames_biiis"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_536v2")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_4jrcq")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_2j76e")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_8l784")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ddpjc")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ysb67")
}],
"loop": true,
"name": &"double_jump",
"speed": 20.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_p0ft3")
}],
"loop": true,
"name": &"fall",
"speed": 20.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_7mcil")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_v47fi")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ww3db")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_qk8no")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_xkn65")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_58cvo")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ywu40")
}],
"loop": true,
"name": &"hit",
"speed": 20.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_h3735")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_767bv")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ai5jr")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_57gn1")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_xeup3")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_2rxyh")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_03rso")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_cv8pg")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_pdtkm")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_m0bkw")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_jqmun")
}],
"loop": true,
"name": &"idle",
"speed": 20.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_b6hk5")
}],
"loop": true,
"name": &"jump",
"speed": 20.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_w7qt3")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_n8vne")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_831to")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_nwbgj")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ovrt7")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_f878o")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_l02v3")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_rp7kb")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_c3yjs")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_j4q22")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_01fgr")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_3jc3m")
}],
"loop": true,
"name": &"run",
"speed": 20.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_nrk44")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_mj7h8")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_w5jxv")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_svjaf")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_3prte")
}],
"loop": true,
"name": &"wall_jump",
"speed": 20.0
}]

[sub_resource type="RectangleShape2D" id="RectangleShape2D_sdfx0"]
size = Vector2(15, 5)

[sub_resource type="Animation" id="Animation_wf0vp"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("legs_collider:shape")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [SubResource("RectangleShape2D_sdfx0")]
}

[sub_resource type="Animation" id="Animation_n347d"]
resource_name = "double_jump"
length = 0.250005
loop_mode = 1
step = 0.05
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("legs_collider:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.1, 0.2),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 1,
"values": [Vector2(-9, 0.5), Vector2(-0.5, -9), Vector2(9, -0.5)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("core_collider:position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.1, 0.2),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 1,
"values": [Vector2(3, 0), Vector2(0, 3), Vector2(-3, 0)]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("legs_collider:rotation")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0, 0.1, 0.2),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 1,
"values": [1.5708, 0.0, 1.5708]
}

[sub_resource type="CircleShape2D" id="CircleShape2D_f6x57"]

[sub_resource type="Animation" id="Animation_1exwv"]
resource_name = "fall"
length = 0.001
loop_mode = 1
step = 0.05
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("legs_collider:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [Vector2(1.5, 13.5)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("legs_collider:shape")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [SubResource("RectangleShape2D_sdfx0")]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("core_collider:position")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [Vector2(1, 0)]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("core_collider:shape")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [SubResource("CircleShape2D_f6x57")]
}
tracks/4/type = "value"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath("legs_collider:rotation")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [0.0]
}

[sub_resource type="Animation" id="Animation_r743b"]
resource_name = "idle"
length = 0.500005
loop_mode = 1
step = 0.05
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("legs_collider:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.0001),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [Vector2(0.5, 13.5), Vector2(0.5, 13.5)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("core_collider:position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.0001, 0.0002, 0.0003, 0.15, 0.25, 0.2501, 0.2502, 0.2503, 0.45),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 1,
"values": [Vector2(1, 2), Vector2(1, 2), Vector2(1, 1), Vector2(1, 2), Vector2(1, 1), Vector2(1, 0), Vector2(1, 0), Vector2(1, 0), Vector2(1, 0), Vector2(1, 1)]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("legs_collider:rotation")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [0.0]
}

[sub_resource type="Animation" id="Animation_pqbfv"]
resource_name = "jump"
length = 0.001
loop_mode = 1
step = 0.05
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("core_collider:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [Vector2(1, -2)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("legs_collider:position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [Vector2(0.5, 13.5)]
}

[sub_resource type="Animation" id="Animation_avhec"]
resource_name = "run"
length = 0.550005
loop_mode = 1
step = 0.05
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("legs_collider:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.05, 0.15, 0.2, 0.3, 0.35, 0.45, 0.5),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1),
"update": 1,
"values": [Vector2(0.5, 10.5), Vector2(0.5, 9.5), Vector2(0.5, 11.5), Vector2(0.5, 13.5), Vector2(0.5, 10.5), Vector2(0.5, 9.5), Vector2(0.5, 11.5), Vector2(-0.5, 13.5)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("core_collider:position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.05, 0.15, 0.2, 0.3, 0.35, 0.45, 0.4501, 0.5),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 1,
"values": [Vector2(1, -1), Vector2(1, -2), Vector2(1, 0), Vector2(2, 2), Vector2(1, -1), Vector2(1, -2), Vector2(1, 0), Vector2(1, 0), Vector2(1, 2)]
}

[sub_resource type="Animation" id="Animation_062de"]
resource_name = "wall_jump"
length = 0.001
loop_mode = 1
step = 0.05
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("legs_collider:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [Vector2(1.5, 12)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("core_collider:position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [Vector2(-2, 0)]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_civye"]
_data = {
"RESET": SubResource("Animation_wf0vp"),
"double_jump": SubResource("Animation_n347d"),
"fall": SubResource("Animation_1exwv"),
"idle": SubResource("Animation_r743b"),
"jump": SubResource("Animation_pqbfv"),
"run": SubResource("Animation_avhec"),
"wall_jump": SubResource("Animation_062de")
}

[sub_resource type="Resource" id="Resource_eg7pt"]
script = ExtResource("14_dmiqd")
use_acceleration = true
ground_acceleration = 20.0
ground_deceleration = 20.0
ground_friction = 0.015
ground_speed = 128.0
ground_turn_speed = 20.0
air_acceleration = 20.0
air_deceleration = 20.0
air_turn_speed = 128.0

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_jsltu"]
texture = ExtResource("16_7wq30")
0:0/0 = 0
0:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:0/0/physics_layer_0/angular_velocity = 0.0
1:0/0 = 0
1:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:0/0/physics_layer_0/angular_velocity = 0.0
2:0/0 = 0
2:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:0/0/physics_layer_0/angular_velocity = 0.0
3:0/0 = 0
3:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:0/0/physics_layer_0/angular_velocity = 0.0
4:0/0 = 0
4:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:0/0/physics_layer_0/angular_velocity = 0.0
6:0/0 = 0
6:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:0/0/physics_layer_0/angular_velocity = 0.0
6:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
7:0/0 = 0
7:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:0/0/physics_layer_0/angular_velocity = 0.0
7:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
8:0/0 = 0
8:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:0/0/physics_layer_0/angular_velocity = 0.0
8:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
9:0/0 = 0
9:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:0/0/physics_layer_0/angular_velocity = 0.0
10:0/0 = 0
10:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:0/0/physics_layer_0/angular_velocity = 0.0
12:0/0 = 0
12:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
12:0/0/physics_layer_0/angular_velocity = 0.0
13:0/0 = 0
13:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
13:0/0/physics_layer_0/angular_velocity = 0.0
14:0/0 = 0
14:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
14:0/0/physics_layer_0/angular_velocity = 0.0
15:0/0 = 0
15:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
15:0/0/physics_layer_0/angular_velocity = 0.0
15:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
17:0/0 = 0
17:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
17:0/0/physics_layer_0/angular_velocity = 0.0
18:0/0 = 0
18:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
18:0/0/physics_layer_0/angular_velocity = 0.0
19:0/0 = 0
19:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
19:0/0/physics_layer_0/angular_velocity = 0.0
0:1/0 = 0
0:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:1/0/physics_layer_0/angular_velocity = 0.0
1:1/0 = 0
1:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:1/0/physics_layer_0/angular_velocity = 0.0
2:1/0 = 0
2:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:1/0/physics_layer_0/angular_velocity = 0.0
3:1/0 = 0
3:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:1/0/physics_layer_0/angular_velocity = 0.0
4:1/0 = 0
4:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:1/0/physics_layer_0/angular_velocity = 0.0
6:1/0 = 0
6:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:1/0/physics_layer_0/angular_velocity = 0.0
6:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
7:1/0 = 0
7:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:1/0/physics_layer_0/angular_velocity = 0.0
7:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
8:1/0 = 0
8:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:1/0/physics_layer_0/angular_velocity = 0.0
8:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
9:1/0 = 0
9:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:1/0/physics_layer_0/angular_velocity = 0.0
10:1/0 = 0
10:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:1/0/physics_layer_0/angular_velocity = 0.0
12:1/0 = 0
12:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
12:1/0/physics_layer_0/angular_velocity = 0.0
13:1/0 = 0
13:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
13:1/0/physics_layer_0/angular_velocity = 0.0
14:1/0 = 0
14:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
14:1/0/physics_layer_0/angular_velocity = 0.0
15:1/0 = 0
15:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
15:1/0/physics_layer_0/angular_velocity = 0.0
15:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
17:1/0 = 0
17:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
17:1/0/physics_layer_0/angular_velocity = 0.0
17:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, -2.97638, -8, -2.97638)
18:1/0 = 0
18:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
18:1/0/physics_layer_0/angular_velocity = 0.0
18:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, -3.00678, -8, -3)
19:1/0 = 0
19:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
19:1/0/physics_layer_0/angular_velocity = 0.0
19:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, -3.00678, -8, -3.03462)
0:2/0 = 0
0:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:2/0/physics_layer_0/angular_velocity = 0.0
1:2/0 = 0
1:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:2/0/physics_layer_0/angular_velocity = 0.0
2:2/0 = 0
2:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:2/0/physics_layer_0/angular_velocity = 0.0
6:2/0 = 0
6:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:2/0/physics_layer_0/angular_velocity = 0.0
6:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
7:2/0 = 0
7:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:2/0/physics_layer_0/angular_velocity = 0.0
7:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
8:2/0 = 0
8:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:2/0/physics_layer_0/angular_velocity = 0.0
8:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
13:2/0 = 0
13:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
13:2/0/physics_layer_0/angular_velocity = 0.0
14:2/0 = 0
14:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
14:2/0/physics_layer_0/angular_velocity = 0.0
15:2/0 = 0
15:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
15:2/0/physics_layer_0/angular_velocity = 0.0
15:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
17:2/0 = 0
17:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
17:2/0/physics_layer_0/angular_velocity = 0.0
18:2/0 = 0
18:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
18:2/0/physics_layer_0/angular_velocity = 0.0
19:2/0 = 0
19:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
19:2/0/physics_layer_0/angular_velocity = 0.0
0:4/0 = 0
0:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:4/0/physics_layer_0/angular_velocity = 0.0
1:4/0 = 0
1:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:4/0/physics_layer_0/angular_velocity = 0.0
1:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, -0.0625, -8, 0)
2:4/0 = 0
2:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:4/0/physics_layer_0/angular_velocity = 0.0
3:4/0 = 0
3:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:4/0/physics_layer_0/angular_velocity = 0.0
4:4/0 = 0
4:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:4/0/physics_layer_0/angular_velocity = 0.0
6:4/0 = 0
6:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:4/0/physics_layer_0/angular_velocity = 0.0
6:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
7:4/0 = 0
7:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:4/0/physics_layer_0/angular_velocity = 0.0
7:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
8:4/0 = 0
8:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:4/0/physics_layer_0/angular_velocity = 0.0
8:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
9:4/0 = 0
9:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:4/0/physics_layer_0/angular_velocity = 0.0
10:4/0 = 0
10:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:4/0/physics_layer_0/angular_velocity = 0.0
12:4/0 = 0
12:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
12:4/0/physics_layer_0/angular_velocity = 0.0
13:4/0 = 0
13:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
13:4/0/physics_layer_0/angular_velocity = 0.0
14:4/0 = 0
14:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
14:4/0/physics_layer_0/angular_velocity = 0.0
15:4/0 = 0
15:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
15:4/0/physics_layer_0/angular_velocity = 0.0
17:4/0 = 0
17:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
17:4/0/physics_layer_0/angular_velocity = 0.0
18:4/0 = 0
18:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
18:4/0/physics_layer_0/angular_velocity = 0.0
19:4/0 = 0
19:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
19:4/0/physics_layer_0/angular_velocity = 0.0
20:4/0 = 0
20:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
20:4/0/physics_layer_0/angular_velocity = 0.0
21:4/0 = 0
21:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
21:4/0/physics_layer_0/angular_velocity = 0.0
0:5/0 = 0
0:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:5/0/physics_layer_0/angular_velocity = 0.0
0:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 0, -8, -0.0625, 8, -8, 8)
1:5/0 = 0
1:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:5/0/physics_layer_0/angular_velocity = 0.0
2:5/0 = 0
2:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:5/0/physics_layer_0/angular_velocity = 0.0
2:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(0, -8, 8, -8, 8, 8, 0.0625, 8)
3:5/0 = 0
3:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:5/0/physics_layer_0/angular_velocity = 0.0
4:5/0 = 0
4:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:5/0/physics_layer_0/angular_velocity = 0.0
6:5/0 = 0
6:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:5/0/physics_layer_0/angular_velocity = 0.0
6:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
7:5/0 = 0
7:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:5/0/physics_layer_0/angular_velocity = 0.0
7:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
8:5/0 = 0
8:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:5/0/physics_layer_0/angular_velocity = 0.0
8:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
9:5/0 = 0
9:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:5/0/physics_layer_0/angular_velocity = 0.0
10:5/0 = 0
10:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:5/0/physics_layer_0/angular_velocity = 0.0
12:5/0 = 0
12:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
12:5/0/physics_layer_0/angular_velocity = 0.0
13:5/0 = 0
13:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
13:5/0/physics_layer_0/angular_velocity = 0.0
14:5/0 = 0
14:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
14:5/0/physics_layer_0/angular_velocity = 0.0
15:5/0 = 0
15:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
15:5/0/physics_layer_0/angular_velocity = 0.0
17:5/0 = 0
17:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
17:5/0/physics_layer_0/angular_velocity = 0.0
18:5/0 = 0
18:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
18:5/0/physics_layer_0/angular_velocity = 0.0
19:5/0 = 0
19:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
19:5/0/physics_layer_0/angular_velocity = 0.0
20:5/0 = 0
20:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
20:5/0/physics_layer_0/angular_velocity = 0.0
21:5/0 = 0
21:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
21:5/0/physics_layer_0/angular_velocity = 0.0
0:6/0 = 0
0:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:6/0/physics_layer_0/angular_velocity = 0.0
1:6/0 = 0
1:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:6/0/physics_layer_0/angular_velocity = 0.0
1:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, 0, 8, 0, 8, 8, -8, 8)
2:6/0 = 0
2:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:6/0/physics_layer_0/angular_velocity = 0.0
6:6/0 = 0
6:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:6/0/physics_layer_0/angular_velocity = 0.0
6:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
7:6/0 = 0
7:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:6/0/physics_layer_0/angular_velocity = 0.0
7:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
8:6/0 = 0
8:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:6/0/physics_layer_0/angular_velocity = 0.0
8:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
13:6/0 = 0
13:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
13:6/0/physics_layer_0/angular_velocity = 0.0
14:6/0 = 0
14:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
14:6/0/physics_layer_0/angular_velocity = 0.0
15:6/0 = 0
15:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
15:6/0/physics_layer_0/angular_velocity = 0.0
17:6/0 = 0
17:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
17:6/0/physics_layer_0/angular_velocity = 0.0
18:6/0 = 0
18:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
18:6/0/physics_layer_0/angular_velocity = 0.0
19:6/0 = 0
19:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
19:6/0/physics_layer_0/angular_velocity = 0.0
0:8/0 = 0
0:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:8/0/physics_layer_0/angular_velocity = 0.0
1:8/0 = 0
1:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:8/0/physics_layer_0/angular_velocity = 0.0
2:8/0 = 0
2:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:8/0/physics_layer_0/angular_velocity = 0.0
3:8/0 = 0
3:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:8/0/physics_layer_0/angular_velocity = 0.0
4:8/0 = 0
4:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:8/0/physics_layer_0/angular_velocity = 0.0
6:8/0 = 0
6:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:8/0/physics_layer_0/angular_velocity = 0.0
7:8/0 = 0
7:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:8/0/physics_layer_0/angular_velocity = 0.0
8:8/0 = 0
8:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:8/0/physics_layer_0/angular_velocity = 0.0
9:8/0 = 0
9:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:8/0/physics_layer_0/angular_velocity = 0.0
10:8/0 = 0
10:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:8/0/physics_layer_0/angular_velocity = 0.0
12:8/0 = 0
12:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
12:8/0/physics_layer_0/angular_velocity = 0.0
13:8/0 = 0
13:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
13:8/0/physics_layer_0/angular_velocity = 0.0
14:8/0 = 0
14:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
14:8/0/physics_layer_0/angular_velocity = 0.0
15:8/0 = 0
15:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
15:8/0/physics_layer_0/angular_velocity = 0.0
17:8/0 = 0
17:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
17:8/0/physics_layer_0/angular_velocity = 0.0
18:8/0 = 0
18:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
18:8/0/physics_layer_0/angular_velocity = 0.0
19:8/0 = 0
19:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
19:8/0/physics_layer_0/angular_velocity = 0.0
20:8/0 = 0
20:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
20:8/0/physics_layer_0/angular_velocity = 0.0
0:9/0 = 0
0:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:9/0/physics_layer_0/angular_velocity = 0.0
1:9/0 = 0
1:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:9/0/physics_layer_0/angular_velocity = 0.0
2:9/0 = 0
2:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:9/0/physics_layer_0/angular_velocity = 0.0
3:9/0 = 0
3:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:9/0/physics_layer_0/angular_velocity = 0.0
4:9/0 = 0
4:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:9/0/physics_layer_0/angular_velocity = 0.0
6:9/0 = 0
6:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:9/0/physics_layer_0/angular_velocity = 0.0
7:9/0 = 0
7:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:9/0/physics_layer_0/angular_velocity = 0.0
8:9/0 = 0
8:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:9/0/physics_layer_0/angular_velocity = 0.0
9:9/0 = 0
9:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:9/0/physics_layer_0/angular_velocity = 0.0
10:9/0 = 0
10:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:9/0/physics_layer_0/angular_velocity = 0.0
12:9/0 = 0
12:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
12:9/0/physics_layer_0/angular_velocity = 0.0
13:9/0 = 0
13:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
13:9/0/physics_layer_0/angular_velocity = 0.0
14:9/0 = 0
14:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
14:9/0/physics_layer_0/angular_velocity = 0.0
15:9/0 = 0
15:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
15:9/0/physics_layer_0/angular_velocity = 0.0
17:9/0 = 0
17:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
17:9/0/physics_layer_0/angular_velocity = 0.0
18:9/0 = 0
18:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
18:9/0/physics_layer_0/angular_velocity = 0.0
19:9/0 = 0
19:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
19:9/0/physics_layer_0/angular_velocity = 0.0
20:9/0 = 0
20:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
20:9/0/physics_layer_0/angular_velocity = 0.0
0:10/0 = 0
0:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:10/0/physics_layer_0/angular_velocity = 0.0
1:10/0 = 0
1:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:10/0/physics_layer_0/angular_velocity = 0.0
2:10/0 = 0
2:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:10/0/physics_layer_0/angular_velocity = 0.0
6:10/0 = 0
6:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:10/0/physics_layer_0/angular_velocity = 0.0
7:10/0 = 0
7:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:10/0/physics_layer_0/angular_velocity = 0.0
8:10/0 = 0
8:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:10/0/physics_layer_0/angular_velocity = 0.0
13:10/0 = 0
13:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
13:10/0/physics_layer_0/angular_velocity = 0.0
14:10/0 = 0
14:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
14:10/0/physics_layer_0/angular_velocity = 0.0
15:10/0 = 0
15:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
15:10/0/physics_layer_0/angular_velocity = 0.0
18:10/0 = 0
18:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
18:10/0/physics_layer_0/angular_velocity = 0.0
19:10/0 = 0
19:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
19:10/0/physics_layer_0/angular_velocity = 0.0
20:10/0 = 0
20:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
20:10/0/physics_layer_0/angular_velocity = 0.0

[sub_resource type="TileSet" id="TileSet_oy0ft"]
physics_layer_0/collision_layer = 1
sources/0 = SubResource("TileSetAtlasSource_jsltu")
tile_proxies/coords_level = [[0, Vector2i(0, 0)], [9, Vector2i(0, 0)], [0, Vector2i(0, 1)], [9, Vector2i(0, 1)], [0, Vector2i(0, 2)], [9, Vector2i(0, 2)], [0, Vector2i(0, 3)], [9, Vector2i(0, 3)], [0, Vector2i(0, 4)], [9, Vector2i(0, 4)], [0, Vector2i(0, 5)], [9, Vector2i(0, 5)], [0, Vector2i(0, 6)], [9, Vector2i(0, 6)], [0, Vector2i(0, 7)], [9, Vector2i(0, 7)], [0, Vector2i(0, 8)], [9, Vector2i(0, 8)], [0, Vector2i(1, 0)], [9, Vector2i(1, 0)], [0, Vector2i(1, 1)], [9, Vector2i(1, 1)], [0, Vector2i(1, 2)], [9, Vector2i(1, 2)], [0, Vector2i(1, 3)], [9, Vector2i(1, 3)], [0, Vector2i(1, 4)], [9, Vector2i(1, 4)], [0, Vector2i(1, 5)], [9, Vector2i(1, 5)], [0, Vector2i(1, 6)], [9, Vector2i(1, 6)], [0, Vector2i(1, 7)], [9, Vector2i(1, 7)], [0, Vector2i(1, 8)], [9, Vector2i(1, 8)], [0, Vector2i(2, 0)], [9, Vector2i(2, 0)], [0, Vector2i(2, 1)], [9, Vector2i(2, 1)], [0, Vector2i(2, 2)], [9, Vector2i(2, 2)], [0, Vector2i(2, 3)], [9, Vector2i(2, 3)], [0, Vector2i(2, 4)], [9, Vector2i(2, 4)], [0, Vector2i(2, 5)], [9, Vector2i(2, 5)], [0, Vector2i(2, 6)], [9, Vector2i(2, 6)], [0, Vector2i(2, 7)], [9, Vector2i(2, 7)], [0, Vector2i(2, 8)], [9, Vector2i(2, 8)], [0, Vector2i(3, 0)], [9, Vector2i(3, 0)], [0, Vector2i(3, 1)], [9, Vector2i(3, 1)], [0, Vector2i(3, 2)], [9, Vector2i(3, 2)], [0, Vector2i(3, 3)], [9, Vector2i(3, 3)], [0, Vector2i(3, 4)], [9, Vector2i(3, 4)], [0, Vector2i(3, 5)], [9, Vector2i(3, 5)], [0, Vector2i(3, 6)], [9, Vector2i(3, 6)], [0, Vector2i(3, 7)], [9, Vector2i(3, 7)], [0, Vector2i(3, 8)], [9, Vector2i(3, 8)], [0, Vector2i(4, 0)], [9, Vector2i(4, 0)], [0, Vector2i(4, 1)], [9, Vector2i(4, 1)], [0, Vector2i(4, 2)], [9, Vector2i(4, 2)], [0, Vector2i(4, 3)], [9, Vector2i(4, 3)], [0, Vector2i(4, 4)], [9, Vector2i(4, 4)], [0, Vector2i(4, 5)], [9, Vector2i(4, 5)], [0, Vector2i(4, 6)], [9, Vector2i(4, 6)], [0, Vector2i(4, 7)], [9, Vector2i(4, 7)], [0, Vector2i(4, 8)], [9, Vector2i(4, 8)], [0, Vector2i(5, 0)], [9, Vector2i(5, 0)], [0, Vector2i(5, 1)], [9, Vector2i(5, 1)], [0, Vector2i(5, 2)], [9, Vector2i(5, 2)], [0, Vector2i(5, 3)], [9, Vector2i(5, 3)], [0, Vector2i(5, 4)], [9, Vector2i(5, 4)], [0, Vector2i(5, 5)], [9, Vector2i(5, 5)], [0, Vector2i(5, 6)], [9, Vector2i(5, 6)], [0, Vector2i(5, 7)], [9, Vector2i(5, 7)], [0, Vector2i(5, 8)], [9, Vector2i(5, 8)], [0, Vector2i(6, 0)], [9, Vector2i(6, 0)], [0, Vector2i(6, 1)], [9, Vector2i(6, 1)], [0, Vector2i(6, 2)], [9, Vector2i(6, 2)], [0, Vector2i(6, 3)], [9, Vector2i(6, 3)], [0, Vector2i(6, 4)], [9, Vector2i(6, 4)], [0, Vector2i(6, 5)], [9, Vector2i(6, 5)], [0, Vector2i(6, 6)], [9, Vector2i(6, 6)], [0, Vector2i(6, 7)], [9, Vector2i(6, 7)], [0, Vector2i(6, 8)], [9, Vector2i(6, 8)], [0, Vector2i(7, 0)], [9, Vector2i(7, 0)], [0, Vector2i(7, 1)], [9, Vector2i(7, 1)], [0, Vector2i(7, 2)], [9, Vector2i(7, 2)], [0, Vector2i(7, 3)], [9, Vector2i(7, 3)], [0, Vector2i(7, 4)], [9, Vector2i(7, 4)], [0, Vector2i(7, 5)], [9, Vector2i(7, 5)], [0, Vector2i(7, 6)], [9, Vector2i(7, 6)], [0, Vector2i(7, 7)], [9, Vector2i(7, 7)], [0, Vector2i(7, 8)], [9, Vector2i(7, 8)], [0, Vector2i(8, 0)], [9, Vector2i(8, 0)], [0, Vector2i(8, 1)], [9, Vector2i(8, 1)], [0, Vector2i(8, 2)], [9, Vector2i(8, 2)], [0, Vector2i(8, 3)], [9, Vector2i(8, 3)], [0, Vector2i(8, 4)], [9, Vector2i(8, 4)], [0, Vector2i(8, 5)], [9, Vector2i(8, 5)], [0, Vector2i(8, 6)], [9, Vector2i(8, 6)], [0, Vector2i(8, 7)], [9, Vector2i(8, 7)], [0, Vector2i(8, 8)], [9, Vector2i(8, 8)], [1, Vector2i(0, 0)], [8, Vector2i(0, 0)], [1, Vector2i(0, 1)], [9, Vector2i(9, 1)], [1, Vector2i(0, 2)], [9, Vector2i(9, 2)], [1, Vector2i(0, 3)], [9, Vector2i(9, 3)], [1, Vector2i(0, 4)], [9, Vector2i(9, 4)], [1, Vector2i(0, 5)], [9, Vector2i(9, 5)], [1, Vector2i(0, 6)], [9, Vector2i(9, 6)], [1, Vector2i(0, 7)], [9, Vector2i(9, 7)], [1, Vector2i(0, 8)], [9, Vector2i(9, 8)], [1, Vector2i(1, 0)], [9, Vector2i(10, 0)], [1, Vector2i(1, 1)], [9, Vector2i(10, 1)], [1, Vector2i(1, 2)], [9, Vector2i(10, 2)], [1, Vector2i(1, 3)], [9, Vector2i(10, 3)], [1, Vector2i(1, 4)], [9, Vector2i(10, 4)], [1, Vector2i(1, 5)], [9, Vector2i(10, 5)], [1, Vector2i(1, 6)], [9, Vector2i(10, 6)], [1, Vector2i(1, 7)], [9, Vector2i(10, 7)], [1, Vector2i(1, 8)], [9, Vector2i(10, 8)], [1, Vector2i(2, 0)], [9, Vector2i(11, 0)], [1, Vector2i(2, 1)], [9, Vector2i(11, 1)], [1, Vector2i(2, 2)], [9, Vector2i(11, 2)], [1, Vector2i(2, 3)], [9, Vector2i(11, 3)], [1, Vector2i(2, 4)], [9, Vector2i(11, 4)], [1, Vector2i(2, 5)], [9, Vector2i(11, 5)], [1, Vector2i(2, 6)], [9, Vector2i(11, 6)], [1, Vector2i(2, 7)], [9, Vector2i(11, 7)], [1, Vector2i(2, 8)], [9, Vector2i(11, 8)], [1, Vector2i(3, 0)], [9, Vector2i(12, 0)], [1, Vector2i(3, 1)], [9, Vector2i(12, 1)], [1, Vector2i(3, 2)], [9, Vector2i(12, 2)], [1, Vector2i(3, 3)], [9, Vector2i(12, 3)], [1, Vector2i(3, 4)], [9, Vector2i(12, 4)], [1, Vector2i(3, 5)], [9, Vector2i(12, 5)], [1, Vector2i(3, 6)], [9, Vector2i(12, 6)], [1, Vector2i(3, 7)], [9, Vector2i(12, 7)], [1, Vector2i(3, 8)], [9, Vector2i(12, 8)], [1, Vector2i(4, 0)], [9, Vector2i(13, 0)], [1, Vector2i(4, 1)], [9, Vector2i(13, 1)], [1, Vector2i(4, 2)], [9, Vector2i(13, 2)], [1, Vector2i(4, 3)], [9, Vector2i(13, 3)], [1, Vector2i(4, 4)], [9, Vector2i(13, 4)], [1, Vector2i(4, 5)], [9, Vector2i(13, 5)], [1, Vector2i(4, 6)], [9, Vector2i(13, 6)], [1, Vector2i(4, 7)], [9, Vector2i(13, 7)], [1, Vector2i(4, 8)], [9, Vector2i(13, 8)], [1, Vector2i(5, 0)], [9, Vector2i(14, 0)], [1, Vector2i(5, 1)], [9, Vector2i(14, 1)], [1, Vector2i(5, 2)], [9, Vector2i(14, 2)], [1, Vector2i(5, 3)], [9, Vector2i(14, 3)], [1, Vector2i(5, 4)], [9, Vector2i(14, 4)], [1, Vector2i(5, 5)], [9, Vector2i(14, 5)], [1, Vector2i(5, 6)], [9, Vector2i(14, 6)], [1, Vector2i(5, 7)], [9, Vector2i(14, 7)], [1, Vector2i(5, 8)], [9, Vector2i(14, 8)], [1, Vector2i(6, 0)], [9, Vector2i(15, 0)], [1, Vector2i(6, 1)], [9, Vector2i(15, 1)], [1, Vector2i(6, 2)], [9, Vector2i(15, 2)], [1, Vector2i(6, 3)], [9, Vector2i(15, 3)], [1, Vector2i(6, 4)], [9, Vector2i(15, 4)], [1, Vector2i(6, 5)], [9, Vector2i(15, 5)], [1, Vector2i(6, 6)], [9, Vector2i(15, 6)], [1, Vector2i(6, 7)], [9, Vector2i(15, 7)], [1, Vector2i(6, 8)], [9, Vector2i(15, 8)], [1, Vector2i(7, 0)], [9, Vector2i(16, 0)], [1, Vector2i(7, 1)], [9, Vector2i(16, 1)], [1, Vector2i(7, 2)], [9, Vector2i(16, 2)], [1, Vector2i(7, 3)], [9, Vector2i(16, 3)], [1, Vector2i(7, 4)], [9, Vector2i(16, 4)], [1, Vector2i(7, 5)], [9, Vector2i(16, 5)], [1, Vector2i(7, 6)], [9, Vector2i(16, 6)], [1, Vector2i(7, 7)], [9, Vector2i(16, 7)], [1, Vector2i(7, 8)], [9, Vector2i(16, 8)], [1, Vector2i(8, 0)], [9, Vector2i(17, 0)], [1, Vector2i(8, 1)], [9, Vector2i(17, 1)], [1, Vector2i(8, 2)], [9, Vector2i(17, 2)], [1, Vector2i(8, 3)], [9, Vector2i(17, 3)], [1, Vector2i(8, 4)], [9, Vector2i(17, 4)], [1, Vector2i(8, 5)], [9, Vector2i(17, 5)], [1, Vector2i(8, 6)], [9, Vector2i(17, 6)], [1, Vector2i(8, 7)], [9, Vector2i(17, 7)], [1, Vector2i(8, 8)], [9, Vector2i(17, 8)], [2, Vector2i(0, 0)], [8, Vector2i(1, 0)], [2, Vector2i(0, 1)], [9, Vector2i(18, 1)], [2, Vector2i(0, 2)], [9, Vector2i(18, 2)], [2, Vector2i(0, 3)], [9, Vector2i(18, 3)], [2, Vector2i(0, 4)], [9, Vector2i(18, 4)], [2, Vector2i(0, 5)], [9, Vector2i(18, 5)], [2, Vector2i(0, 6)], [9, Vector2i(18, 6)], [2, Vector2i(0, 7)], [9, Vector2i(18, 7)], [2, Vector2i(0, 8)], [9, Vector2i(18, 8)], [2, Vector2i(1, 0)], [9, Vector2i(19, 0)], [2, Vector2i(1, 1)], [9, Vector2i(19, 1)], [2, Vector2i(1, 2)], [9, Vector2i(19, 2)], [2, Vector2i(1, 3)], [9, Vector2i(19, 3)], [2, Vector2i(1, 4)], [9, Vector2i(19, 4)], [2, Vector2i(1, 5)], [9, Vector2i(19, 5)], [2, Vector2i(1, 6)], [9, Vector2i(19, 6)], [2, Vector2i(1, 7)], [9, Vector2i(19, 7)], [2, Vector2i(1, 8)], [9, Vector2i(19, 8)], [2, Vector2i(2, 0)], [9, Vector2i(20, 0)], [2, Vector2i(2, 1)], [9, Vector2i(20, 1)], [2, Vector2i(2, 2)], [9, Vector2i(20, 2)], [2, Vector2i(2, 3)], [9, Vector2i(20, 3)], [2, Vector2i(2, 4)], [9, Vector2i(20, 4)], [2, Vector2i(2, 5)], [9, Vector2i(20, 5)], [2, Vector2i(2, 6)], [9, Vector2i(20, 6)], [2, Vector2i(2, 7)], [9, Vector2i(20, 7)], [2, Vector2i(2, 8)], [9, Vector2i(20, 8)], [2, Vector2i(3, 0)], [9, Vector2i(21, 0)], [2, Vector2i(3, 1)], [9, Vector2i(21, 1)], [2, Vector2i(3, 2)], [9, Vector2i(21, 2)], [2, Vector2i(3, 3)], [9, Vector2i(21, 3)], [2, Vector2i(3, 4)], [9, Vector2i(21, 4)], [2, Vector2i(3, 5)], [9, Vector2i(21, 5)], [2, Vector2i(3, 6)], [9, Vector2i(21, 6)], [2, Vector2i(3, 7)], [9, Vector2i(21, 7)], [2, Vector2i(3, 8)], [9, Vector2i(21, 8)], [2, Vector2i(4, 0)], [9, Vector2i(22, 0)], [2, Vector2i(4, 1)], [9, Vector2i(22, 1)], [2, Vector2i(4, 2)], [9, Vector2i(22, 2)], [2, Vector2i(4, 3)], [9, Vector2i(22, 3)], [2, Vector2i(4, 4)], [9, Vector2i(22, 4)], [2, Vector2i(4, 5)], [9, Vector2i(22, 5)], [2, Vector2i(4, 6)], [9, Vector2i(22, 6)], [2, Vector2i(4, 7)], [9, Vector2i(22, 7)], [2, Vector2i(4, 8)], [9, Vector2i(22, 8)], [2, Vector2i(5, 0)], [9, Vector2i(23, 0)], [2, Vector2i(5, 1)], [9, Vector2i(23, 1)], [2, Vector2i(5, 2)], [9, Vector2i(23, 2)], [2, Vector2i(5, 3)], [9, Vector2i(23, 3)], [2, Vector2i(5, 4)], [9, Vector2i(23, 4)], [2, Vector2i(5, 5)], [9, Vector2i(23, 5)], [2, Vector2i(5, 6)], [9, Vector2i(23, 6)], [2, Vector2i(5, 7)], [9, Vector2i(23, 7)], [2, Vector2i(5, 8)], [9, Vector2i(23, 8)], [2, Vector2i(6, 0)], [9, Vector2i(24, 0)], [2, Vector2i(6, 1)], [9, Vector2i(24, 1)], [2, Vector2i(6, 2)], [9, Vector2i(24, 2)], [2, Vector2i(6, 3)], [9, Vector2i(24, 3)], [2, Vector2i(6, 4)], [9, Vector2i(24, 4)], [2, Vector2i(6, 5)], [9, Vector2i(24, 5)], [2, Vector2i(6, 6)], [9, Vector2i(24, 6)], [2, Vector2i(6, 7)], [9, Vector2i(24, 7)], [2, Vector2i(6, 8)], [9, Vector2i(24, 8)], [2, Vector2i(7, 0)], [9, Vector2i(25, 0)], [2, Vector2i(7, 1)], [9, Vector2i(25, 1)], [2, Vector2i(7, 2)], [9, Vector2i(25, 2)], [2, Vector2i(7, 3)], [9, Vector2i(25, 3)], [2, Vector2i(7, 4)], [9, Vector2i(25, 4)], [2, Vector2i(7, 5)], [9, Vector2i(25, 5)], [2, Vector2i(7, 6)], [9, Vector2i(25, 6)], [2, Vector2i(7, 7)], [9, Vector2i(25, 7)], [2, Vector2i(7, 8)], [9, Vector2i(25, 8)], [2, Vector2i(8, 0)], [9, Vector2i(26, 0)], [2, Vector2i(8, 1)], [9, Vector2i(26, 1)], [2, Vector2i(8, 2)], [9, Vector2i(26, 2)], [2, Vector2i(8, 3)], [9, Vector2i(26, 3)], [2, Vector2i(8, 4)], [9, Vector2i(26, 4)], [2, Vector2i(8, 5)], [9, Vector2i(26, 5)], [2, Vector2i(8, 6)], [9, Vector2i(26, 6)], [2, Vector2i(8, 7)], [9, Vector2i(26, 7)], [2, Vector2i(8, 8)], [9, Vector2i(26, 8)], [5, Vector2i(0, 0)], [8, Vector2i(4, 0)], [5, Vector2i(0, 1)], [9, Vector2i(0, 10)], [5, Vector2i(0, 2)], [9, Vector2i(0, 11)], [5, Vector2i(0, 3)], [9, Vector2i(0, 12)], [5, Vector2i(0, 4)], [9, Vector2i(0, 13)], [5, Vector2i(0, 5)], [9, Vector2i(0, 14)], [5, Vector2i(0, 6)], [9, Vector2i(0, 15)], [5, Vector2i(0, 7)], [9, Vector2i(0, 16)], [5, Vector2i(0, 8)], [9, Vector2i(0, 17)], [5, Vector2i(1, 0)], [9, Vector2i(1, 9)], [5, Vector2i(1, 1)], [9, Vector2i(1, 10)], [5, Vector2i(1, 2)], [9, Vector2i(1, 11)], [5, Vector2i(1, 3)], [9, Vector2i(1, 12)], [5, Vector2i(1, 4)], [9, Vector2i(1, 13)], [5, Vector2i(1, 5)], [9, Vector2i(1, 14)], [5, Vector2i(1, 6)], [9, Vector2i(1, 15)], [5, Vector2i(1, 7)], [9, Vector2i(1, 16)], [5, Vector2i(1, 8)], [9, Vector2i(1, 17)], [5, Vector2i(2, 0)], [9, Vector2i(2, 9)], [5, Vector2i(2, 1)], [9, Vector2i(2, 10)], [5, Vector2i(2, 2)], [9, Vector2i(2, 11)], [5, Vector2i(2, 3)], [9, Vector2i(2, 12)], [5, Vector2i(2, 4)], [9, Vector2i(2, 13)], [5, Vector2i(2, 5)], [9, Vector2i(2, 14)], [5, Vector2i(2, 6)], [9, Vector2i(2, 15)], [5, Vector2i(2, 7)], [9, Vector2i(2, 16)], [5, Vector2i(2, 8)], [9, Vector2i(2, 17)], [5, Vector2i(3, 0)], [9, Vector2i(3, 9)], [5, Vector2i(3, 1)], [9, Vector2i(3, 10)], [5, Vector2i(3, 2)], [9, Vector2i(3, 11)], [5, Vector2i(3, 3)], [9, Vector2i(3, 12)], [5, Vector2i(3, 4)], [9, Vector2i(3, 13)], [5, Vector2i(3, 5)], [9, Vector2i(3, 14)], [5, Vector2i(3, 6)], [9, Vector2i(3, 15)], [5, Vector2i(3, 7)], [9, Vector2i(3, 16)], [5, Vector2i(3, 8)], [9, Vector2i(3, 17)], [5, Vector2i(4, 0)], [9, Vector2i(4, 9)], [5, Vector2i(4, 1)], [9, Vector2i(4, 10)], [5, Vector2i(4, 2)], [9, Vector2i(4, 11)], [5, Vector2i(4, 3)], [9, Vector2i(4, 12)], [5, Vector2i(4, 4)], [9, Vector2i(4, 13)], [5, Vector2i(4, 5)], [9, Vector2i(4, 14)], [5, Vector2i(4, 6)], [9, Vector2i(4, 15)], [5, Vector2i(4, 7)], [9, Vector2i(4, 16)], [5, Vector2i(4, 8)], [9, Vector2i(4, 17)], [5, Vector2i(5, 0)], [9, Vector2i(5, 9)], [5, Vector2i(5, 1)], [9, Vector2i(5, 10)], [5, Vector2i(5, 2)], [9, Vector2i(5, 11)], [5, Vector2i(5, 3)], [9, Vector2i(5, 12)], [5, Vector2i(5, 4)], [9, Vector2i(5, 13)], [5, Vector2i(5, 5)], [9, Vector2i(5, 14)], [5, Vector2i(5, 6)], [9, Vector2i(5, 15)], [5, Vector2i(5, 7)], [9, Vector2i(5, 16)], [5, Vector2i(5, 8)], [9, Vector2i(5, 17)], [5, Vector2i(6, 0)], [9, Vector2i(6, 9)], [5, Vector2i(6, 1)], [9, Vector2i(6, 10)], [5, Vector2i(6, 2)], [9, Vector2i(6, 11)], [5, Vector2i(6, 3)], [9, Vector2i(6, 12)], [5, Vector2i(6, 4)], [9, Vector2i(6, 13)], [5, Vector2i(6, 5)], [9, Vector2i(6, 14)], [5, Vector2i(6, 6)], [9, Vector2i(6, 15)], [5, Vector2i(6, 7)], [9, Vector2i(6, 16)], [5, Vector2i(6, 8)], [9, Vector2i(6, 17)], [5, Vector2i(7, 0)], [9, Vector2i(7, 9)], [5, Vector2i(7, 1)], [9, Vector2i(7, 10)], [5, Vector2i(7, 2)], [9, Vector2i(7, 11)], [5, Vector2i(7, 3)], [9, Vector2i(7, 12)], [5, Vector2i(7, 4)], [9, Vector2i(7, 13)], [5, Vector2i(7, 5)], [9, Vector2i(7, 14)], [5, Vector2i(7, 6)], [9, Vector2i(7, 15)], [5, Vector2i(7, 7)], [9, Vector2i(7, 16)], [5, Vector2i(7, 8)], [9, Vector2i(7, 17)], [5, Vector2i(8, 0)], [9, Vector2i(8, 9)], [5, Vector2i(8, 1)], [9, Vector2i(8, 10)], [5, Vector2i(8, 2)], [9, Vector2i(8, 11)], [5, Vector2i(8, 3)], [9, Vector2i(8, 12)], [5, Vector2i(8, 4)], [9, Vector2i(8, 13)], [5, Vector2i(8, 5)], [9, Vector2i(8, 14)], [5, Vector2i(8, 6)], [9, Vector2i(8, 15)], [5, Vector2i(8, 7)], [9, Vector2i(8, 16)], [5, Vector2i(8, 8)], [9, Vector2i(8, 17)], [5, Vector2i(9, 0)], [9, Vector2i(9, 9)], [5, Vector2i(9, 1)], [9, Vector2i(9, 10)], [5, Vector2i(9, 2)], [9, Vector2i(9, 11)], [5, Vector2i(9, 3)], [9, Vector2i(9, 12)], [5, Vector2i(9, 4)], [9, Vector2i(9, 13)], [5, Vector2i(9, 5)], [9, Vector2i(9, 14)], [5, Vector2i(9, 6)], [9, Vector2i(9, 15)], [5, Vector2i(9, 7)], [9, Vector2i(9, 16)], [5, Vector2i(9, 8)], [9, Vector2i(9, 17)], [5, Vector2i(10, 0)], [9, Vector2i(10, 9)], [5, Vector2i(10, 1)], [9, Vector2i(10, 10)], [5, Vector2i(10, 2)], [9, Vector2i(10, 11)], [5, Vector2i(10, 3)], [9, Vector2i(10, 12)], [5, Vector2i(10, 4)], [9, Vector2i(10, 13)], [5, Vector2i(10, 5)], [9, Vector2i(10, 14)], [5, Vector2i(10, 6)], [9, Vector2i(10, 15)], [5, Vector2i(10, 7)], [9, Vector2i(10, 16)], [5, Vector2i(10, 8)], [9, Vector2i(10, 17)], [5, Vector2i(11, 0)], [9, Vector2i(11, 9)], [5, Vector2i(11, 1)], [9, Vector2i(11, 10)], [5, Vector2i(11, 2)], [9, Vector2i(11, 11)], [5, Vector2i(11, 3)], [9, Vector2i(11, 12)], [5, Vector2i(11, 4)], [9, Vector2i(11, 13)], [5, Vector2i(11, 5)], [9, Vector2i(11, 14)], [5, Vector2i(11, 6)], [9, Vector2i(11, 15)], [5, Vector2i(11, 7)], [9, Vector2i(11, 16)], [5, Vector2i(11, 8)], [9, Vector2i(11, 17)], [5, Vector2i(12, 0)], [9, Vector2i(12, 9)], [5, Vector2i(12, 1)], [9, Vector2i(12, 10)], [5, Vector2i(12, 2)], [9, Vector2i(12, 11)], [5, Vector2i(12, 3)], [9, Vector2i(12, 12)], [5, Vector2i(12, 4)], [9, Vector2i(12, 13)], [5, Vector2i(12, 5)], [9, Vector2i(12, 14)], [5, Vector2i(12, 6)], [9, Vector2i(12, 15)], [5, Vector2i(12, 7)], [9, Vector2i(12, 16)], [5, Vector2i(12, 8)], [9, Vector2i(12, 17)], [5, Vector2i(13, 0)], [9, Vector2i(13, 9)], [5, Vector2i(13, 1)], [9, Vector2i(13, 10)], [5, Vector2i(13, 2)], [9, Vector2i(13, 11)], [5, Vector2i(13, 3)], [9, Vector2i(13, 12)], [5, Vector2i(13, 4)], [9, Vector2i(13, 13)], [5, Vector2i(13, 5)], [9, Vector2i(13, 14)], [5, Vector2i(13, 6)], [9, Vector2i(13, 15)], [5, Vector2i(13, 7)], [9, Vector2i(13, 16)], [5, Vector2i(13, 8)], [9, Vector2i(13, 17)], [5, Vector2i(14, 0)], [9, Vector2i(14, 9)], [5, Vector2i(14, 1)], [9, Vector2i(14, 10)], [5, Vector2i(14, 2)], [9, Vector2i(14, 11)], [5, Vector2i(14, 3)], [9, Vector2i(14, 12)], [5, Vector2i(14, 4)], [9, Vector2i(14, 13)], [5, Vector2i(14, 5)], [9, Vector2i(14, 14)], [5, Vector2i(14, 6)], [9, Vector2i(14, 15)], [5, Vector2i(14, 7)], [9, Vector2i(14, 16)], [5, Vector2i(14, 8)], [9, Vector2i(14, 17)], [5, Vector2i(15, 0)], [9, Vector2i(15, 9)], [5, Vector2i(15, 1)], [9, Vector2i(15, 10)], [5, Vector2i(15, 2)], [9, Vector2i(15, 11)], [5, Vector2i(15, 3)], [9, Vector2i(15, 12)], [5, Vector2i(15, 4)], [9, Vector2i(15, 13)], [5, Vector2i(15, 5)], [9, Vector2i(15, 14)], [5, Vector2i(15, 6)], [9, Vector2i(15, 15)], [5, Vector2i(15, 7)], [9, Vector2i(15, 16)], [5, Vector2i(15, 8)], [9, Vector2i(15, 17)], [5, Vector2i(16, 0)], [9, Vector2i(16, 9)], [5, Vector2i(16, 1)], [9, Vector2i(16, 10)], [5, Vector2i(16, 2)], [9, Vector2i(16, 11)], [5, Vector2i(16, 3)], [9, Vector2i(16, 12)], [5, Vector2i(16, 4)], [9, Vector2i(16, 13)], [5, Vector2i(16, 5)], [9, Vector2i(16, 14)], [5, Vector2i(16, 6)], [9, Vector2i(16, 15)], [5, Vector2i(16, 7)], [9, Vector2i(16, 16)], [5, Vector2i(16, 8)], [9, Vector2i(16, 17)], [5, Vector2i(17, 0)], [9, Vector2i(17, 9)], [5, Vector2i(17, 1)], [9, Vector2i(17, 10)], [5, Vector2i(17, 2)], [9, Vector2i(17, 11)], [5, Vector2i(17, 3)], [9, Vector2i(17, 12)], [5, Vector2i(17, 4)], [9, Vector2i(17, 13)], [5, Vector2i(17, 5)], [9, Vector2i(17, 14)], [5, Vector2i(17, 6)], [9, Vector2i(17, 15)], [5, Vector2i(17, 7)], [9, Vector2i(17, 16)], [5, Vector2i(17, 8)], [9, Vector2i(17, 17)], [5, Vector2i(18, 0)], [9, Vector2i(18, 9)], [5, Vector2i(18, 1)], [9, Vector2i(18, 10)], [5, Vector2i(18, 2)], [9, Vector2i(18, 11)], [5, Vector2i(18, 3)], [9, Vector2i(18, 12)], [5, Vector2i(18, 4)], [9, Vector2i(18, 13)], [5, Vector2i(18, 5)], [9, Vector2i(18, 14)], [5, Vector2i(18, 6)], [9, Vector2i(18, 15)], [5, Vector2i(18, 7)], [9, Vector2i(18, 16)], [5, Vector2i(18, 8)], [9, Vector2i(18, 17)], [5, Vector2i(19, 0)], [9, Vector2i(19, 9)], [5, Vector2i(19, 1)], [9, Vector2i(19, 10)], [5, Vector2i(19, 2)], [9, Vector2i(19, 11)], [5, Vector2i(19, 3)], [9, Vector2i(19, 12)], [5, Vector2i(19, 4)], [9, Vector2i(19, 13)], [5, Vector2i(19, 5)], [9, Vector2i(19, 14)], [5, Vector2i(19, 6)], [9, Vector2i(19, 15)], [5, Vector2i(19, 7)], [9, Vector2i(19, 16)], [5, Vector2i(19, 8)], [9, Vector2i(19, 17)], [6, Vector2i(0, 0)], [8, Vector2i(5, 0)], [6, Vector2i(0, 1)], [9, Vector2i(0, 19)], [6, Vector2i(0, 2)], [9, Vector2i(0, 20)], [6, Vector2i(0, 3)], [9, Vector2i(0, 21)], [6, Vector2i(0, 4)], [9, Vector2i(0, 22)], [6, Vector2i(0, 5)], [9, Vector2i(0, 23)], [6, Vector2i(0, 6)], [9, Vector2i(0, 24)], [6, Vector2i(1, 0)], [9, Vector2i(1, 18)], [6, Vector2i(1, 1)], [9, Vector2i(1, 19)], [6, Vector2i(1, 2)], [9, Vector2i(1, 20)], [6, Vector2i(1, 3)], [9, Vector2i(1, 21)], [6, Vector2i(1, 4)], [9, Vector2i(1, 22)], [6, Vector2i(1, 5)], [9, Vector2i(1, 23)], [6, Vector2i(1, 6)], [9, Vector2i(1, 24)], [6, Vector2i(2, 0)], [9, Vector2i(2, 18)], [6, Vector2i(2, 1)], [9, Vector2i(2, 19)], [6, Vector2i(2, 2)], [9, Vector2i(2, 20)], [6, Vector2i(2, 3)], [9, Vector2i(2, 21)], [6, Vector2i(2, 4)], [9, Vector2i(2, 22)], [6, Vector2i(2, 5)], [9, Vector2i(2, 23)], [6, Vector2i(2, 6)], [9, Vector2i(2, 24)], [6, Vector2i(3, 0)], [9, Vector2i(3, 18)], [6, Vector2i(3, 1)], [9, Vector2i(3, 19)], [6, Vector2i(3, 2)], [9, Vector2i(3, 20)], [6, Vector2i(3, 3)], [9, Vector2i(3, 21)], [6, Vector2i(3, 4)], [9, Vector2i(3, 22)], [6, Vector2i(3, 5)], [9, Vector2i(3, 23)], [6, Vector2i(3, 6)], [9, Vector2i(3, 24)], [6, Vector2i(4, 0)], [9, Vector2i(4, 18)], [6, Vector2i(4, 1)], [9, Vector2i(4, 19)], [6, Vector2i(4, 2)], [9, Vector2i(4, 20)], [6, Vector2i(4, 3)], [9, Vector2i(4, 21)], [6, Vector2i(4, 4)], [9, Vector2i(4, 22)], [6, Vector2i(4, 5)], [9, Vector2i(4, 23)], [6, Vector2i(4, 6)], [9, Vector2i(4, 24)], [6, Vector2i(5, 0)], [9, Vector2i(5, 18)], [6, Vector2i(5, 1)], [9, Vector2i(5, 19)], [6, Vector2i(5, 2)], [9, Vector2i(5, 20)], [6, Vector2i(5, 3)], [9, Vector2i(5, 21)], [6, Vector2i(5, 4)], [9, Vector2i(5, 22)], [6, Vector2i(5, 5)], [9, Vector2i(5, 23)], [6, Vector2i(5, 6)], [9, Vector2i(5, 24)], [6, Vector2i(6, 0)], [9, Vector2i(6, 18)], [6, Vector2i(6, 1)], [9, Vector2i(6, 19)], [6, Vector2i(6, 2)], [9, Vector2i(6, 20)], [6, Vector2i(6, 3)], [9, Vector2i(6, 21)], [6, Vector2i(6, 4)], [9, Vector2i(6, 22)], [6, Vector2i(6, 5)], [9, Vector2i(6, 23)], [6, Vector2i(6, 6)], [9, Vector2i(6, 24)], [6, Vector2i(7, 0)], [9, Vector2i(7, 18)], [6, Vector2i(7, 1)], [9, Vector2i(7, 19)], [6, Vector2i(7, 2)], [9, Vector2i(7, 20)], [6, Vector2i(7, 3)], [9, Vector2i(7, 21)], [6, Vector2i(7, 4)], [9, Vector2i(7, 22)], [6, Vector2i(7, 5)], [9, Vector2i(7, 23)], [6, Vector2i(7, 6)], [9, Vector2i(7, 24)], [6, Vector2i(8, 0)], [9, Vector2i(8, 18)], [6, Vector2i(8, 1)], [9, Vector2i(8, 19)], [6, Vector2i(8, 2)], [9, Vector2i(8, 20)], [6, Vector2i(8, 3)], [9, Vector2i(8, 21)], [6, Vector2i(8, 4)], [9, Vector2i(8, 22)], [6, Vector2i(8, 5)], [9, Vector2i(8, 23)], [6, Vector2i(8, 6)], [9, Vector2i(8, 24)], [6, Vector2i(9, 0)], [9, Vector2i(9, 18)], [6, Vector2i(9, 1)], [9, Vector2i(9, 19)], [6, Vector2i(9, 2)], [9, Vector2i(9, 20)], [6, Vector2i(9, 3)], [9, Vector2i(9, 21)], [6, Vector2i(9, 4)], [9, Vector2i(9, 22)], [6, Vector2i(9, 5)], [9, Vector2i(9, 23)], [6, Vector2i(9, 6)], [9, Vector2i(9, 24)], [6, Vector2i(10, 0)], [9, Vector2i(10, 18)], [6, Vector2i(10, 1)], [9, Vector2i(10, 19)], [6, Vector2i(10, 2)], [9, Vector2i(10, 20)], [6, Vector2i(10, 3)], [9, Vector2i(10, 21)], [6, Vector2i(10, 4)], [9, Vector2i(10, 22)], [6, Vector2i(10, 5)], [9, Vector2i(10, 23)], [6, Vector2i(10, 6)], [9, Vector2i(10, 24)], [6, Vector2i(11, 0)], [9, Vector2i(11, 18)], [6, Vector2i(11, 1)], [9, Vector2i(11, 19)], [6, Vector2i(11, 2)], [9, Vector2i(11, 20)], [6, Vector2i(11, 3)], [9, Vector2i(11, 21)], [6, Vector2i(11, 4)], [9, Vector2i(11, 22)], [6, Vector2i(11, 5)], [9, Vector2i(11, 23)], [6, Vector2i(11, 6)], [9, Vector2i(11, 24)], [6, Vector2i(12, 0)], [9, Vector2i(12, 18)], [6, Vector2i(12, 1)], [9, Vector2i(12, 19)], [6, Vector2i(12, 2)], [9, Vector2i(12, 20)], [6, Vector2i(12, 3)], [9, Vector2i(12, 21)], [6, Vector2i(12, 4)], [9, Vector2i(12, 22)], [6, Vector2i(12, 5)], [9, Vector2i(12, 23)], [6, Vector2i(12, 6)], [9, Vector2i(12, 24)], [6, Vector2i(13, 0)], [9, Vector2i(13, 18)], [6, Vector2i(13, 1)], [9, Vector2i(13, 19)], [6, Vector2i(13, 2)], [9, Vector2i(13, 20)], [6, Vector2i(13, 3)], [9, Vector2i(13, 21)], [6, Vector2i(13, 4)], [9, Vector2i(13, 22)], [6, Vector2i(13, 5)], [9, Vector2i(13, 23)], [6, Vector2i(13, 6)], [9, Vector2i(13, 24)], [6, Vector2i(14, 0)], [9, Vector2i(14, 18)], [6, Vector2i(14, 1)], [9, Vector2i(14, 19)], [6, Vector2i(14, 2)], [9, Vector2i(14, 20)], [6, Vector2i(14, 3)], [9, Vector2i(14, 21)], [6, Vector2i(14, 4)], [9, Vector2i(14, 22)], [6, Vector2i(14, 5)], [9, Vector2i(14, 23)], [6, Vector2i(14, 6)], [9, Vector2i(14, 24)], [6, Vector2i(15, 0)], [9, Vector2i(15, 18)], [6, Vector2i(15, 1)], [9, Vector2i(15, 19)], [6, Vector2i(15, 2)], [9, Vector2i(15, 20)], [6, Vector2i(15, 3)], [9, Vector2i(15, 21)], [6, Vector2i(15, 4)], [9, Vector2i(15, 22)], [6, Vector2i(15, 5)], [9, Vector2i(15, 23)], [6, Vector2i(15, 6)], [9, Vector2i(15, 24)], [7, Vector2i(0, 0)], [8, Vector2i(6, 0)], [7, Vector2i(0, 1)], [9, Vector2i(16, 19)], [7, Vector2i(0, 2)], [9, Vector2i(16, 20)], [7, Vector2i(0, 3)], [9, Vector2i(16, 21)], [7, Vector2i(0, 4)], [9, Vector2i(16, 22)], [7, Vector2i(0, 5)], [9, Vector2i(16, 23)], [7, Vector2i(0, 6)], [9, Vector2i(16, 24)], [7, Vector2i(1, 0)], [9, Vector2i(17, 18)], [7, Vector2i(1, 1)], [9, Vector2i(17, 19)], [7, Vector2i(1, 2)], [9, Vector2i(17, 20)], [7, Vector2i(1, 3)], [9, Vector2i(17, 21)], [7, Vector2i(1, 4)], [9, Vector2i(17, 22)], [7, Vector2i(1, 5)], [9, Vector2i(17, 23)], [7, Vector2i(1, 6)], [9, Vector2i(17, 24)], [7, Vector2i(2, 0)], [9, Vector2i(18, 18)], [7, Vector2i(2, 1)], [9, Vector2i(18, 19)], [7, Vector2i(2, 2)], [9, Vector2i(18, 20)], [7, Vector2i(2, 3)], [9, Vector2i(18, 21)], [7, Vector2i(2, 4)], [9, Vector2i(18, 22)], [7, Vector2i(2, 5)], [9, Vector2i(18, 23)], [7, Vector2i(2, 6)], [9, Vector2i(18, 24)], [7, Vector2i(3, 0)], [9, Vector2i(19, 18)], [7, Vector2i(3, 1)], [9, Vector2i(19, 19)], [7, Vector2i(3, 2)], [9, Vector2i(19, 20)], [7, Vector2i(3, 3)], [9, Vector2i(19, 21)], [7, Vector2i(3, 4)], [9, Vector2i(19, 22)], [7, Vector2i(3, 5)], [9, Vector2i(19, 23)], [7, Vector2i(3, 6)], [9, Vector2i(19, 24)], [7, Vector2i(4, 0)], [9, Vector2i(20, 18)], [7, Vector2i(4, 1)], [9, Vector2i(20, 19)], [7, Vector2i(4, 2)], [9, Vector2i(20, 20)], [7, Vector2i(4, 3)], [9, Vector2i(20, 21)], [7, Vector2i(4, 4)], [9, Vector2i(20, 22)], [7, Vector2i(4, 5)], [9, Vector2i(20, 23)], [7, Vector2i(4, 6)], [9, Vector2i(20, 24)], [7, Vector2i(5, 0)], [9, Vector2i(21, 18)], [7, Vector2i(5, 1)], [9, Vector2i(21, 19)], [7, Vector2i(5, 2)], [9, Vector2i(21, 20)], [7, Vector2i(5, 3)], [9, Vector2i(21, 21)], [7, Vector2i(5, 4)], [9, Vector2i(21, 22)], [7, Vector2i(5, 5)], [9, Vector2i(21, 23)], [7, Vector2i(5, 6)], [9, Vector2i(21, 24)], [7, Vector2i(6, 0)], [9, Vector2i(22, 18)], [7, Vector2i(6, 1)], [9, Vector2i(22, 19)], [7, Vector2i(6, 2)], [9, Vector2i(22, 20)], [7, Vector2i(6, 3)], [9, Vector2i(22, 21)], [7, Vector2i(6, 4)], [9, Vector2i(22, 22)], [7, Vector2i(6, 5)], [9, Vector2i(22, 23)], [7, Vector2i(6, 6)], [9, Vector2i(22, 24)], [7, Vector2i(7, 0)], [9, Vector2i(23, 18)], [7, Vector2i(7, 1)], [9, Vector2i(23, 19)], [7, Vector2i(7, 2)], [9, Vector2i(23, 20)], [7, Vector2i(7, 3)], [9, Vector2i(23, 21)], [7, Vector2i(7, 4)], [9, Vector2i(23, 22)], [7, Vector2i(7, 5)], [9, Vector2i(23, 23)], [7, Vector2i(7, 6)], [9, Vector2i(23, 24)], [7, Vector2i(8, 0)], [9, Vector2i(24, 18)], [7, Vector2i(8, 1)], [9, Vector2i(24, 19)], [7, Vector2i(8, 2)], [9, Vector2i(24, 20)], [7, Vector2i(8, 3)], [9, Vector2i(24, 21)], [7, Vector2i(8, 4)], [9, Vector2i(24, 22)], [7, Vector2i(8, 5)], [9, Vector2i(24, 23)], [7, Vector2i(8, 6)], [9, Vector2i(24, 24)], [7, Vector2i(9, 0)], [9, Vector2i(25, 18)], [7, Vector2i(9, 1)], [9, Vector2i(25, 19)], [7, Vector2i(9, 2)], [9, Vector2i(25, 20)], [7, Vector2i(9, 3)], [9, Vector2i(25, 21)], [7, Vector2i(9, 4)], [9, Vector2i(25, 22)], [7, Vector2i(9, 5)], [9, Vector2i(25, 23)], [7, Vector2i(9, 6)], [9, Vector2i(25, 24)], [7, Vector2i(10, 0)], [9, Vector2i(26, 18)], [7, Vector2i(10, 1)], [9, Vector2i(26, 19)], [7, Vector2i(10, 2)], [9, Vector2i(26, 20)], [7, Vector2i(10, 3)], [9, Vector2i(26, 21)], [7, Vector2i(10, 4)], [9, Vector2i(26, 22)], [7, Vector2i(10, 5)], [9, Vector2i(26, 23)], [7, Vector2i(10, 6)], [9, Vector2i(26, 24)], [7, Vector2i(11, 0)], [9, Vector2i(27, 18)], [7, Vector2i(11, 1)], [9, Vector2i(27, 19)], [7, Vector2i(11, 2)], [9, Vector2i(27, 20)], [7, Vector2i(11, 3)], [9, Vector2i(27, 21)], [7, Vector2i(11, 4)], [9, Vector2i(27, 22)], [7, Vector2i(11, 5)], [9, Vector2i(27, 23)], [7, Vector2i(11, 6)], [9, Vector2i(27, 24)], [7, Vector2i(12, 0)], [9, Vector2i(28, 18)], [7, Vector2i(12, 1)], [9, Vector2i(28, 19)], [7, Vector2i(12, 2)], [9, Vector2i(28, 20)], [7, Vector2i(12, 3)], [9, Vector2i(28, 21)], [7, Vector2i(12, 4)], [9, Vector2i(28, 22)], [7, Vector2i(12, 5)], [9, Vector2i(28, 23)], [7, Vector2i(12, 6)], [9, Vector2i(28, 24)], [7, Vector2i(13, 0)], [9, Vector2i(29, 18)], [7, Vector2i(13, 1)], [9, Vector2i(29, 19)], [7, Vector2i(13, 2)], [9, Vector2i(29, 20)], [7, Vector2i(13, 3)], [9, Vector2i(29, 21)], [7, Vector2i(13, 4)], [9, Vector2i(29, 22)], [7, Vector2i(13, 5)], [9, Vector2i(29, 23)], [7, Vector2i(13, 6)], [9, Vector2i(29, 24)], [7, Vector2i(14, 0)], [9, Vector2i(30, 18)], [7, Vector2i(14, 1)], [9, Vector2i(30, 19)], [7, Vector2i(14, 2)], [9, Vector2i(30, 20)], [7, Vector2i(14, 3)], [9, Vector2i(30, 21)], [7, Vector2i(14, 4)], [9, Vector2i(30, 22)], [7, Vector2i(14, 5)], [9, Vector2i(30, 23)], [7, Vector2i(14, 6)], [9, Vector2i(30, 24)], [7, Vector2i(15, 0)], [9, Vector2i(31, 18)], [7, Vector2i(15, 1)], [9, Vector2i(31, 19)], [7, Vector2i(15, 2)], [9, Vector2i(31, 20)], [7, Vector2i(15, 3)], [9, Vector2i(31, 21)], [7, Vector2i(15, 4)], [9, Vector2i(31, 22)], [7, Vector2i(15, 5)], [9, Vector2i(31, 23)], [7, Vector2i(15, 6)], [9, Vector2i(31, 24)], [8, Vector2i(0, 0)], [9, Vector2i(0, 25)], [8, Vector2i(0, 1)], [9, Vector2i(0, 26)], [8, Vector2i(0, 2)], [9, Vector2i(0, 27)], [8, Vector2i(0, 3)], [9, Vector2i(0, 28)], [8, Vector2i(0, 4)], [9, Vector2i(0, 29)], [8, Vector2i(0, 5)], [9, Vector2i(0, 30)], [8, Vector2i(0, 6)], [9, Vector2i(0, 31)], [8, Vector2i(1, 0)], [9, Vector2i(1, 25)], [8, Vector2i(1, 1)], [9, Vector2i(1, 26)], [8, Vector2i(1, 2)], [9, Vector2i(1, 27)], [8, Vector2i(1, 3)], [9, Vector2i(1, 28)], [8, Vector2i(1, 4)], [9, Vector2i(1, 29)], [8, Vector2i(1, 5)], [9, Vector2i(1, 30)], [8, Vector2i(1, 6)], [9, Vector2i(1, 31)], [8, Vector2i(2, 0)], [9, Vector2i(2, 25)], [8, Vector2i(2, 1)], [9, Vector2i(2, 26)], [8, Vector2i(2, 2)], [9, Vector2i(2, 27)], [8, Vector2i(2, 3)], [9, Vector2i(2, 28)], [8, Vector2i(2, 4)], [9, Vector2i(2, 29)], [8, Vector2i(2, 5)], [9, Vector2i(2, 30)], [8, Vector2i(2, 6)], [9, Vector2i(2, 31)], [8, Vector2i(3, 0)], [9, Vector2i(3, 25)], [8, Vector2i(3, 1)], [9, Vector2i(3, 26)], [8, Vector2i(3, 2)], [9, Vector2i(3, 27)], [8, Vector2i(3, 3)], [9, Vector2i(3, 28)], [8, Vector2i(3, 4)], [9, Vector2i(3, 29)], [8, Vector2i(3, 5)], [9, Vector2i(3, 30)], [8, Vector2i(3, 6)], [9, Vector2i(3, 31)], [8, Vector2i(4, 0)], [9, Vector2i(4, 25)], [8, Vector2i(4, 1)], [9, Vector2i(4, 26)], [8, Vector2i(4, 2)], [9, Vector2i(4, 27)], [8, Vector2i(4, 3)], [9, Vector2i(4, 28)], [8, Vector2i(4, 4)], [9, Vector2i(4, 29)], [8, Vector2i(4, 5)], [9, Vector2i(4, 30)], [8, Vector2i(4, 6)], [9, Vector2i(4, 31)], [8, Vector2i(5, 0)], [9, Vector2i(5, 25)], [8, Vector2i(5, 1)], [9, Vector2i(5, 26)], [8, Vector2i(5, 2)], [9, Vector2i(5, 27)], [8, Vector2i(5, 3)], [9, Vector2i(5, 28)], [8, Vector2i(5, 4)], [9, Vector2i(5, 29)], [8, Vector2i(5, 5)], [9, Vector2i(5, 30)], [8, Vector2i(5, 6)], [9, Vector2i(5, 31)], [8, Vector2i(6, 0)], [9, Vector2i(6, 25)], [8, Vector2i(6, 1)], [9, Vector2i(6, 26)], [8, Vector2i(6, 2)], [9, Vector2i(6, 27)], [8, Vector2i(6, 3)], [9, Vector2i(6, 28)], [8, Vector2i(6, 4)], [9, Vector2i(6, 29)], [8, Vector2i(6, 5)], [9, Vector2i(6, 30)], [8, Vector2i(6, 6)], [9, Vector2i(6, 31)], [8, Vector2i(7, 0)], [9, Vector2i(7, 25)], [8, Vector2i(7, 1)], [9, Vector2i(7, 26)], [8, Vector2i(7, 2)], [9, Vector2i(7, 27)], [8, Vector2i(7, 3)], [9, Vector2i(7, 28)], [8, Vector2i(7, 4)], [9, Vector2i(7, 29)], [8, Vector2i(7, 5)], [9, Vector2i(7, 30)], [8, Vector2i(7, 6)], [9, Vector2i(7, 31)], [8, Vector2i(8, 0)], [9, Vector2i(8, 25)], [8, Vector2i(8, 1)], [9, Vector2i(8, 26)], [8, Vector2i(8, 2)], [9, Vector2i(8, 27)], [8, Vector2i(8, 3)], [9, Vector2i(8, 28)], [8, Vector2i(8, 4)], [9, Vector2i(8, 29)], [8, Vector2i(8, 5)], [9, Vector2i(8, 30)], [8, Vector2i(8, 6)], [9, Vector2i(8, 31)], [8, Vector2i(9, 0)], [9, Vector2i(9, 25)], [8, Vector2i(9, 1)], [9, Vector2i(9, 26)], [8, Vector2i(9, 2)], [9, Vector2i(9, 27)], [8, Vector2i(9, 3)], [9, Vector2i(9, 28)], [8, Vector2i(9, 4)], [9, Vector2i(9, 29)], [8, Vector2i(9, 5)], [9, Vector2i(9, 30)], [8, Vector2i(9, 6)], [9, Vector2i(9, 31)], [8, Vector2i(10, 0)], [9, Vector2i(10, 25)], [8, Vector2i(10, 1)], [9, Vector2i(10, 26)], [8, Vector2i(10, 2)], [9, Vector2i(10, 27)], [8, Vector2i(10, 3)], [9, Vector2i(10, 28)], [8, Vector2i(10, 4)], [9, Vector2i(10, 29)], [8, Vector2i(10, 5)], [9, Vector2i(10, 30)], [8, Vector2i(10, 6)], [9, Vector2i(10, 31)], [8, Vector2i(11, 0)], [9, Vector2i(11, 25)], [8, Vector2i(11, 1)], [9, Vector2i(11, 26)], [8, Vector2i(11, 2)], [9, Vector2i(11, 27)], [8, Vector2i(11, 3)], [9, Vector2i(11, 28)], [8, Vector2i(11, 4)], [9, Vector2i(11, 29)], [8, Vector2i(11, 5)], [9, Vector2i(11, 30)], [8, Vector2i(11, 6)], [9, Vector2i(11, 31)], [8, Vector2i(12, 0)], [9, Vector2i(12, 25)], [8, Vector2i(12, 1)], [9, Vector2i(12, 26)], [8, Vector2i(12, 2)], [9, Vector2i(12, 27)], [8, Vector2i(12, 3)], [9, Vector2i(12, 28)], [8, Vector2i(12, 4)], [9, Vector2i(12, 29)], [8, Vector2i(12, 5)], [9, Vector2i(12, 30)], [8, Vector2i(12, 6)], [9, Vector2i(12, 31)], [8, Vector2i(13, 0)], [9, Vector2i(13, 25)], [8, Vector2i(13, 1)], [9, Vector2i(13, 26)], [8, Vector2i(13, 2)], [9, Vector2i(13, 27)], [8, Vector2i(13, 3)], [9, Vector2i(13, 28)], [8, Vector2i(13, 4)], [9, Vector2i(13, 29)], [8, Vector2i(13, 5)], [9, Vector2i(13, 30)], [8, Vector2i(13, 6)], [9, Vector2i(13, 31)], [8, Vector2i(14, 0)], [9, Vector2i(14, 25)], [8, Vector2i(14, 1)], [9, Vector2i(14, 26)], [8, Vector2i(14, 2)], [9, Vector2i(14, 27)], [8, Vector2i(14, 3)], [9, Vector2i(14, 28)], [8, Vector2i(14, 4)], [9, Vector2i(14, 29)], [8, Vector2i(14, 5)], [9, Vector2i(14, 30)], [8, Vector2i(14, 6)], [9, Vector2i(14, 31)], [8, Vector2i(15, 0)], [9, Vector2i(15, 25)], [8, Vector2i(15, 1)], [9, Vector2i(15, 26)], [8, Vector2i(15, 2)], [9, Vector2i(15, 27)], [8, Vector2i(15, 3)], [9, Vector2i(15, 28)], [8, Vector2i(15, 4)], [9, Vector2i(15, 29)], [8, Vector2i(15, 5)], [9, Vector2i(15, 30)], [8, Vector2i(15, 6)], [9, Vector2i(15, 31)]]

[sub_resource type="Resource" id="Resource_6vfpg"]
script = ExtResource("19_55u23")
damping_x = 0.0
damping_y = 0.0
lookahead = 0.0
ignore_jumps = false
panic_zone_enble = true
panic_zone = Rect2i(0, 0, 640, 55)
panic_speed = 2.097

[node name="Game" type="Node2D"]
texture_filter = 1

[node name="Background" type="Node2D" parent="." node_paths=PackedStringArray("target_object")]
script = ExtResource("1_qj05n")
target_object = NodePath("../PlayerCamera")

[node name="Sky" type="Sprite2D" parent="Background"]
texture_repeat = 2
material = SubResource("ShaderMaterial_h605e")
texture = ExtResource("2_c7d6x")
region_rect = Rect2(0, 0, 1280, 640)

[node name="HUDLayer" type="CanvasLayer" parent="."]
layer = 0

[node name="HUD" parent="HUDLayer" node_paths=PackedStringArray("player_movement", "player_jump", "player_camera") instance=ExtResource("1_eqgwh")]
pivot_offset = Vector2(320, 180)
player_movement = NodePath("../../Playerlayer/Player/PlayerMovement")
player_jump = NodePath("../../Playerlayer/Player/PlayerJump")
player_camera = NodePath("../../PlayerCamera")

[node name="Playerlayer" type="CanvasLayer" parent="."]
follow_viewport_enabled = true

[node name="Player" type="CharacterBody2D" parent="Playerlayer"]
position = Vector2(-429, 51)
platform_floor_layers = 1
platform_wall_layers = 1

[node name="Animator" type="AnimatedSprite2D" parent="Playerlayer/Player"]
texture_filter = 1
texture_repeat = 1
sprite_frames = SubResource("SpriteFrames_biiis")
animation = &"idle"
script = ExtResource("9_mxba0")

[node name="AnimationPlayer" type="AnimationPlayer" parent="Playerlayer/Player"]
libraries = {
"": SubResource("AnimationLibrary_civye")
}

[node name="StateMachine" type="Node" parent="Playerlayer/Player" node_paths=PackedStringArray("initial_state")]
script = ExtResource("10_anlff")
initial_state = NodePath("PlayerIdleState")

[node name="PlayerIdleState" type="Node" parent="Playerlayer/Player/StateMachine" node_paths=PackedStringArray("animator", "walk_state", "player")]
script = ExtResource("11_m6vc4")
animator = NodePath("../../Animator")
walk_state = NodePath("../PlayerWalkState")
player = NodePath("../..")

[node name="PlayerWalkState" type="Node" parent="Playerlayer/Player/StateMachine" node_paths=PackedStringArray("animator", "jump_state", "idle_state", "player")]
script = ExtResource("12_vp861")
animator = NodePath("../../Animator")
jump_state = NodePath("../PlayerIdleState")
idle_state = NodePath("../PlayerIdleState")
player = NodePath("../..")

[node name="PlayerMovement" type="Node2D" parent="Playerlayer/Player"]
script = ExtResource("13_nk5fa")
settings_preset = SubResource("Resource_eg7pt")

[node name="PlayerJump" type="Node2D" parent="Playerlayer/Player"]
position = Vector2(0, 50)
script = ExtResource("15_rwm7j")
jump_height = 64.0

[node name="core_collider" type="CollisionShape2D" parent="Playerlayer/Player"]
position = Vector2(1, 2)
shape = SubResource("CircleShape2D_f6x57")

[node name="legs_collider" type="CollisionShape2D" parent="Playerlayer/Player"]
position = Vector2(0.5, 13.5)
shape = SubResource("RectangleShape2D_sdfx0")

[node name="TileMap" type="TileMap" parent="."]
tile_set = SubResource("TileSet_oy0ft")
format = 2
layer_0/name = "background_0"
layer_0/tile_data = PackedInt32Array(393180, 393216, 0, 393181, 458752, 0, 393182, 458752, 0, 393183, 458752, 0, 393184, 458752, 0, 393185, 458752, 0, 393186, 458752, 0, 393187, 458752, 0, 393188, 458752, 0, 393189, 458752, 0, 393190, 458752, 0, 393191, 458752, 0, 393192, 458752, 0, 393193, 458752, 0, 393194, 458752, 0, 393195, 458752, 0, 393196, 458752, 0, 393197, 458752, 0, 393198, 458752, 0, 393199, 458752, 0, 393200, 458752, 0, 393201, 458752, 0, 393202, 458752, 0, 393203, 458752, 0, 393204, 458752, 0, 393205, 458752, 0, 393206, 458752, 0, 393207, 458752, 0, 393208, 458752, 0, 393209, 458752, 0, 393210, 458752, 0, 393211, 458752, 0, 393212, 458752, 0, 393213, 458752, 0, 393214, 458752, 0, 393215, 458752, 0, 327680, 458752, 0, 327681, 458752, 0, 327682, 458752, 0, 327683, 458752, 0, 327684, 458752, 0, 327685, 458752, 0, 327686, 458752, 0, 327687, 458752, 0, 327688, 458752, 0, 327689, 458752, 0, 327690, 458752, 0, 327691, 458752, 0, 327692, 458752, 0, 327693, 458752, 0, 327694, 458752, 0, 327695, 458752, 0, 327696, 458752, 0, 327697, 458752, 0, 327698, 458752, 0, 327699, 458752, 0, 327700, 458752, 0, 327701, 458752, 0, 327702, 458752, 0, 327703, 458752, 0, 327704, 458752, 0, 327705, 458752, 0, 327706, 458752, 0, 327707, 458752, 0, 327708, 458752, 0, 327709, 458752, 0, 327710, 458752, 0, 327711, 458752, 0, 327712, 458752, 0, 327713, 458752, 0, 327714, 458752, 0, 327715, 458752, 0, 327716, 458752, 0, 327717, 458752, 0, 327718, 524288, 0, 458716, 393216, 1, 524252, 393216, 1, 458717, 458752, 1, 524253, 458752, 1, 458718, 458752, 1, 524254, 458752, 1, 458719, 458752, 1, 524255, 458752, 1, 458720, 458752, 1, 524256, 458752, 1, 458721, 458752, 1, 524257, 458752, 1, 458722, 458752, 1, 524258, 458752, 1, 458723, 458752, 1, 524259, 458752, 1, 458724, 458752, 1, 524260, 458752, 1, 458725, 458752, 1, 524261, 458752, 1, 458726, 458752, 1, 524262, 458752, 1, 458727, 458752, 1, 524263, 458752, 1, 458728, 458752, 1, 524264, 458752, 1, 458729, 458752, 1, 524265, 458752, 1, 458730, 458752, 1, 524266, 458752, 1, 458731, 458752, 1, 524267, 458752, 1, 458732, 458752, 1, 524268, 458752, 1, 458733, 458752, 1, 524269, 458752, 1, 458734, 458752, 1, 524270, 458752, 1, 458735, 458752, 1, 524271, 458752, 1, 458736, 458752, 1, 524272, 458752, 1, 458737, 458752, 1, 524273, 458752, 1, 458738, 458752, 1, 524274, 458752, 1, 458739, 458752, 1, 524275, 458752, 1, 458740, 458752, 1, 524276, 458752, 1, 458741, 458752, 1, 524277, 458752, 1, 458742, 458752, 1, 524278, 458752, 1, 458743, 458752, 1, 524279, 458752, 1, 458744, 458752, 1, 524280, 458752, 1, 458745, 458752, 1, 524281, 458752, 1, 458746, 458752, 1, 524282, 458752, 1, 458747, 458752, 1, 524283, 458752, 1, 458748, 458752, 1, 524284, 458752, 1, 458749, 458752, 1, 524285, 458752, 1, 458750, 458752, 1, 524286, 458752, 1, 458751, 458752, 1, 524287, 458752, 1, 393216, 458752, 1, 458752, 458752, 1, 393217, 458752, 1, 458753, 458752, 1, 393218, 458752, 1, 458754, 458752, 1, 393219, 458752, 1, 458755, 458752, 1, 393220, 458752, 1, 458756, 458752, 1, 393221, 458752, 1, 458757, 458752, 1, 393222, 458752, 1, 458758, 458752, 1, 393223, 458752, 1, 458759, 458752, 1, 393224, 458752, 1, 458760, 458752, 1, 393225, 458752, 1, 458761, 458752, 1, 393226, 458752, 1, 458762, 458752, 1, 393227, 458752, 1, 458763, 458752, 1, 393228, 458752, 1, 458764, 458752, 1, 393229, 458752, 1, 458765, 458752, 1, 393230, 458752, 1, 458766, 458752, 1, 393231, 458752, 1, 458767, 458752, 1, 393232, 458752, 1, 458768, 458752, 1, 393233, 458752, 1, 458769, 458752, 1, 393234, 458752, 1, 458770, 458752, 1, 393235, 458752, 1, 458771, 458752, 1, 393236, 458752, 1, 458772, 458752, 1, 393237, 458752, 1, 458773, 458752, 1, 393238, 458752, 1, 458774, 458752, 1, 393239, 458752, 1, 458775, 458752, 1, 393240, 458752, 1, 458776, 458752, 1, 393241, 458752, 1, 458777, 458752, 1, 393242, 458752, 1, 458778, 458752, 1, 393243, 458752, 1, 458779, 458752, 1, 393244, 458752, 1, 458780, 458752, 1, 393245, 458752, 1, 458781, 458752, 1, 393246, 458752, 1, 458782, 458752, 1, 393247, 458752, 1, 458783, 458752, 1, 393248, 458752, 1, 458784, 458752, 1, 393249, 458752, 1, 458785, 458752, 1, 393250, 458752, 1, 458786, 458752, 1, 393251, 458752, 1, 458787, 458752, 1, 393252, 458752, 1, 458788, 458752, 1, 393253, 458752, 1, 458789, 458752, 1, 393254, 524288, 1, 458790, 524288, 1, 589789, 458752, 1, 655325, 458752, 1, 720861, 458752, 1, 786397, 458752, 1, 589790, 458752, 1, 655326, 458752, 1, 720862, 458752, 1, 786398, 458752, 1, 589791, 458752, 1, 655327, 458752, 1, 720863, 458752, 1, 786399, 458752, 1, 589792, 458752, 1, 655328, 458752, 1, 720864, 458752, 1, 786400, 458752, 1, 589793, 458752, 1, 655329, 458752, 1, 720865, 458752, 1, 786401, 458752, 1, 589794, 458752, 1, 655330, 458752, 1, 720866, 458752, 1, 786402, 458752, 1, 589795, 458752, 1, 655331, 458752, 1, 720867, 458752, 1, 786403, 458752, 1, 589796, 458752, 1, 655332, 458752, 1, 720868, 458752, 1, 786404, 458752, 1, 589797, 458752, 1, 655333, 458752, 1, 720869, 458752, 1, 786405, 458752, 1, 589798, 458752, 1, 655334, 458752, 1, 720870, 458752, 1, 786406, 458752, 1, 589799, 458752, 1, 655335, 458752, 1, 720871, 458752, 1, 786407, 458752, 1, 589800, 458752, 1, 655336, 458752, 1, 720872, 458752, 1, 786408, 458752, 1, 589801, 458752, 1, 655337, 458752, 1, 720873, 458752, 1, 786409, 458752, 1, 589802, 458752, 1, 655338, 458752, 1, 720874, 458752, 1, 786410, 458752, 1, 589803, 458752, 1, 655339, 458752, 1, 720875, 458752, 1, 786411, 458752, 1, 589804, 458752, 1, 655340, 458752, 1, 720876, 458752, 1, 786412, 458752, 1, 589805, 458752, 1, 655341, 458752, 1, 720877, 458752, 1, 786413, 458752, 1, 589806, 458752, 1, 655342, 458752, 1, 720878, 458752, 1, 786414, 458752, 1, 589807, 458752, 1, 655343, 458752, 1, 720879, 458752, 1, 786415, 458752, 1, 589808, 458752, 1, 655344, 458752, 1, 720880, 458752, 1, 786416, 458752, 1, 589809, 458752, 1, 655345, 458752, 1, 720881, 458752, 1, 786417, 458752, 1, 589810, 458752, 1, 655346, 458752, 1, 720882, 458752, 1, 786418, 458752, 1, 589811, 458752, 1, 655347, 458752, 1, 720883, 458752, 1, 786419, 458752, 1, 589812, 458752, 1, 655348, 458752, 1, 720884, 458752, 1, 786420, 458752, 1, 589813, 458752, 1, 655349, 458752, 1, 720885, 458752, 1, 786421, 458752, 1, 589814, 458752, 1, 655350, 458752, 1, 720886, 458752, 1, 786422, 458752, 1, 589815, 458752, 1, 655351, 458752, 1, 720887, 458752, 1, 786423, 458752, 1, 589816, 458752, 1, 655352, 458752, 1, 720888, 458752, 1, 786424, 458752, 1, 589817, 458752, 1, 655353, 458752, 1, 720889, 458752, 1, 786425, 458752, 1, 589818, 458752, 1, 655354, 458752, 1, 720890, 458752, 1, 786426, 458752, 1, 589819, 458752, 1, 655355, 458752, 1, 720891, 458752, 1, 786427, 458752, 1, 589820, 458752, 1, 655356, 458752, 1, 720892, 458752, 1, 786428, 458752, 1, 589821, 458752, 1, 655357, 458752, 1, 720893, 458752, 1, 786429, 458752, 1, 589822, 458752, 1, 655358, 458752, 1, 720894, 458752, 1, 786430, 458752, 1, 589823, 458752, 1, 655359, 458752, 1, 720895, 458752, 1, 786431, 458752, 1, 524288, 458752, 1, 589824, 458752, 1, 655360, 458752, 1, 720896, 458752, 1, 524289, 458752, 1, 589825, 458752, 1, 655361, 458752, 1, 720897, 458752, 1, 524290, 458752, 1, 589826, 458752, 1, 655362, 458752, 1, 720898, 458752, 1, 524291, 458752, 1, 589827, 458752, 1, 655363, 458752, 1, 720899, 458752, 1, 524292, 458752, 1, 589828, 458752, 1, 655364, 458752, 1, 720900, 458752, 1, 524293, 458752, 1, 589829, 458752, 1, 655365, 458752, 1, 720901, 458752, 1, 524294, 458752, 1, 589830, 458752, 1, 655366, 458752, 1, 720902, 458752, 1, 524295, 458752, 1, 589831, 458752, 1, 655367, 458752, 1, 720903, 458752, 1, 524296, 458752, 1, 589832, 458752, 1, 655368, 458752, 1, 720904, 458752, 1, 524297, 458752, 1, 589833, 458752, 1, 655369, 458752, 1, 720905, 458752, 1, 524298, 458752, 1, 589834, 458752, 1, 655370, 458752, 1, 720906, 458752, 1, 524299, 458752, 1, 589835, 458752, 1, 655371, 458752, 1, 720907, 458752, 1, 524300, 458752, 1, 589836, 458752, 1, 655372, 458752, 1, 720908, 458752, 1, 524301, 458752, 1, 589837, 458752, 1, 655373, 458752, 1, 720909, 458752, 1, 524302, 458752, 1, 589838, 458752, 1, 655374, 458752, 1, 720910, 458752, 1, 524303, 458752, 1, 589839, 458752, 1, 655375, 458752, 1, 720911, 458752, 1, 524304, 458752, 1, 589840, 458752, 1, 655376, 458752, 1, 720912, 458752, 1, 524305, 458752, 1, 589841, 458752, 1, 655377, 458752, 1, 720913, 458752, 1, 524306, 458752, 1, 589842, 458752, 1, 655378, 458752, 1, 720914, 458752, 1, 524307, 458752, 1, 589843, 458752, 1, 655379, 458752, 1, 720915, 458752, 1, 524308, 458752, 1, 589844, 458752, 1, 655380, 458752, 1, 720916, 458752, 1, 524309, 458752, 1, 589845, 458752, 1, 655381, 458752, 1, 720917, 458752, 1, 524310, 458752, 1, 589846, 458752, 1, 655382, 458752, 1, 720918, 458752, 1, 524311, 458752, 1, 589847, 458752, 1, 655383, 458752, 1, 720919, 458752, 1, 589848, 458752, 1, 655384, 458752, 1, 720920, 458752, 1, 589849, 458752, 1, 655385, 458752, 1, 720921, 458752, 1, 589850, 458752, 1, 655386, 458752, 1, 720922, 458752, 1, 589851, 458752, 1, 655387, 458752, 1, 720923, 458752, 1, 589852, 458752, 1, 655388, 458752, 1, 720924, 458752, 1, 589853, 458752, 1, 655389, 458752, 1, 720925, 458752, 1, 589854, 458752, 1, 655390, 458752, 1, 720926, 458752, 1, 589855, 458752, 1, 655391, 458752, 1, 720927, 458752, 1, 589856, 458752, 1, 655392, 458752, 1, 720928, 458752, 1, 589857, 458752, 1, 655393, 458752, 1, 720929, 458752, 1, 589858, 458752, 1, 655394, 458752, 1, 720930, 458752, 1, 589859, 458752, 1, 655395, 458752, 1, 720931, 458752, 1, 589860, 458752, 1, 655396, 458752, 1, 720932, 458752, 1, 589861, 458752, 1, 655397, 458752, 1, 720933, 458752, 1, 655324, 393216, 1, 720860, 393216, 1, 786396, 393216, 1, 720934, 524288, 1, 524326, 524288, 1, 589862, 524288, 1, 655398, 524288, 1, 589788, 393216, 1, 524312, 458752, 1, 524313, 458752, 1, 524314, 458752, 1, 524315, 458752, 1, 524316, 458752, 1, 524317, 458752, 1, 524318, 458752, 1, 524319, 458752, 1, 524320, 458752, 1, 524321, 458752, 1, 524322, 458752, 1, 524323, 458752, 1, 524324, 458752, 1, 524325, 458752, 1, 851933, 458752, 1, 917469, 458752, 1, 983005, 458752, 1, 851934, 458752, 1, 917470, 458752, 1, 983006, 458752, 1, 851935, 458752, 1, 917471, 458752, 1, 983007, 458752, 1, 851936, 458752, 1, 917472, 458752, 1, 983008, 458752, 1, 851937, 458752, 1, 917473, 458752, 1, 983009, 458752, 1, 851938, 458752, 1, 917474, 458752, 1, 983010, 458752, 1, 851939, 458752, 1, 917475, 458752, 1, 983011, 458752, 1, 851940, 458752, 1, 917476, 458752, 1, 983012, 458752, 1, 851941, 458752, 1, 917477, 458752, 1, 983013, 458752, 1, 851942, 458752, 1, 917478, 458752, 1, 983014, 458752, 1, 851943, 458752, 1, 917479, 458752, 1, 983015, 458752, 1, 851944, 458752, 1, 917480, 458752, 1, 983016, 458752, 1, 851945, 458752, 1, 917481, 458752, 1, 983017, 458752, 1, 851946, 458752, 1, 917482, 458752, 1, 983018, 458752, 1, 851947, 458752, 1, 917483, 458752, 1, 983019, 458752, 1, 851948, 458752, 1, 917484, 458752, 1, 983020, 458752, 1, 851949, 458752, 1, 917485, 458752, 1, 983021, 458752, 1, 851950, 458752, 1, 917486, 458752, 1, 983022, 458752, 1, 851951, 458752, 1, 917487, 458752, 1, 983023, 458752, 1, 851952, 458752, 1, 917488, 458752, 1, 983024, 458752, 1, 851953, 458752, 1, 917489, 458752, 1, 983025, 458752, 1, 851954, 458752, 1, 917490, 458752, 1, 983026, 458752, 1, 851955, 458752, 1, 917491, 458752, 1, 983027, 458752, 1, 851956, 458752, 1, 917492, 458752, 1, 983028, 458752, 1, 851957, 458752, 1, 917493, 458752, 1, 983029, 458752, 1, 851958, 458752, 1, 917494, 458752, 1, 983030, 458752, 1, 851959, 458752, 1, 917495, 458752, 1, 983031, 458752, 1, 851960, 458752, 1, 917496, 458752, 1, 983032, 458752, 1, 851961, 458752, 1, 917497, 458752, 1, 983033, 458752, 1, 851962, 458752, 1, 917498, 458752, 1, 983034, 458752, 1, 851963, 458752, 1, 917499, 458752, 1, 983035, 458752, 1, 851964, 458752, 1, 917500, 458752, 1, 983036, 458752, 1, 851965, 458752, 1, 917501, 458752, 1, 983037, 458752, 1, 851966, 458752, 1, 917502, 458752, 1, 983038, 458752, 1, 851967, 458752, 1, 917503, 458752, 1, 983039, 458752, 1, 786432, 458752, 1, 851968, 458752, 1, 917504, 458752, 1, 786433, 458752, 1, 851969, 458752, 1, 917505, 458752, 1, 786434, 458752, 1, 851970, 458752, 1, 917506, 458752, 1, 786435, 458752, 1, 851971, 458752, 1, 917507, 458752, 1, 786436, 458752, 1, 851972, 458752, 1, 917508, 458752, 1, 786437, 458752, 1, 851973, 458752, 1, 917509, 458752, 1, 786438, 458752, 1, 851974, 458752, 1, 917510, 458752, 1, 786439, 458752, 1, 851975, 458752, 1, 917511, 458752, 1, 786440, 458752, 1, 851976, 458752, 1, 917512, 458752, 1, 786441, 458752, 1, 851977, 458752, 1, 917513, 458752, 1, 786442, 458752, 1, 851978, 458752, 1, 917514, 458752, 1, 786443, 458752, 1, 851979, 458752, 1, 917515, 458752, 1, 786444, 458752, 1, 851980, 458752, 1, 917516, 458752, 1, 786445, 458752, 1, 851981, 458752, 1, 917517, 458752, 1, 786446, 458752, 1, 851982, 458752, 1, 917518, 458752, 1, 786447, 458752, 1, 851983, 458752, 1, 917519, 458752, 1, 786448, 458752, 1, 851984, 458752, 1, 917520, 458752, 1, 786449, 458752, 1, 851985, 458752, 1, 917521, 458752, 1, 786450, 458752, 1, 851986, 458752, 1, 917522, 458752, 1, 786451, 458752, 1, 851987, 458752, 1, 917523, 458752, 1, 786452, 458752, 1, 851988, 458752, 1, 917524, 458752, 1, 786453, 458752, 1, 851989, 458752, 1, 917525, 458752, 1, 786454, 458752, 1, 851990, 458752, 1, 917526, 458752, 1, 786455, 458752, 1, 851991, 458752, 1, 917527, 458752, 1, 786456, 458752, 1, 851992, 458752, 1, 917528, 458752, 1, 786457, 458752, 1, 851993, 458752, 1, 917529, 458752, 1, 786458, 458752, 1, 851994, 458752, 1, 917530, 458752, 1, 786459, 458752, 1, 851995, 458752, 1, 917531, 458752, 1, 786460, 458752, 1, 851996, 458752, 1, 917532, 458752, 1, 786461, 458752, 1, 851997, 458752, 1, 917533, 458752, 1, 786462, 458752, 1, 851998, 458752, 1, 917534, 458752, 1, 786463, 458752, 1, 851999, 458752, 1, 917535, 458752, 1, 786464, 458752, 1, 852000, 458752, 1, 917536, 458752, 1, 786465, 458752, 1, 852001, 458752, 1, 917537, 458752, 1, 786466, 458752, 1, 852002, 458752, 1, 917538, 458752, 1, 786467, 458752, 1, 852003, 458752, 1, 917539, 458752, 1, 786468, 458752, 1, 852004, 458752, 1, 917540, 458752, 1, 786469, 458752, 1, 852005, 458752, 1, 917541, 458752, 1, 1048541, 458752, 1, 1114077, 458752, 1, 1179613, 458752, 1, 1048542, 458752, 1, 1114078, 458752, 1, 1179614, 458752, 1, 1048543, 458752, 1, 1114079, 458752, 1, 1179615, 458752, 1, 1048544, 458752, 1, 1114080, 458752, 1, 1179616, 458752, 1, 1048545, 458752, 1, 1114081, 458752, 1, 1179617, 458752, 1, 1048546, 458752, 1, 1114082, 458752, 1, 1179618, 458752, 1, 1048547, 458752, 1, 1114083, 458752, 1, 1179619, 458752, 1, 1048548, 458752, 1, 1114084, 458752, 1, 1179620, 458752, 1, 1048549, 458752, 1, 1114085, 458752, 1, 1179621, 458752, 1, 1048550, 458752, 1, 1114086, 458752, 1, 1179622, 458752, 1, 1048551, 458752, 1, 1114087, 458752, 1, 1179623, 458752, 1, 1048552, 458752, 1, 1114088, 458752, 1, 1179624, 458752, 1, 1048553, 458752, 1, 1114089, 458752, 1, 1179625, 458752, 1, 1048554, 458752, 1, 1114090, 458752, 1, 1179626, 458752, 1, 1048555, 458752, 1, 1114091, 458752, 1, 1179627, 458752, 1, 1048556, 458752, 1, 1114092, 458752, 1, 1179628, 458752, 1, 1048557, 458752, 1, 1114093, 458752, 1, 1179629, 458752, 1, 1048558, 458752, 1, 1114094, 458752, 1, 1179630, 458752, 1, 1048559, 458752, 1, 1114095, 458752, 1, 1179631, 458752, 1, 1048560, 458752, 1, 1114096, 458752, 1, 1179632, 458752, 1, 1048561, 458752, 1, 1114097, 458752, 1, 1179633, 458752, 1, 1048562, 458752, 1, 1114098, 458752, 1, 1179634, 458752, 1, 1048563, 458752, 1, 1114099, 458752, 1, 1179635, 458752, 1, 1048564, 458752, 1, 1114100, 458752, 1, 1179636, 458752, 1, 1048565, 458752, 1, 1114101, 458752, 1, 1179637, 458752, 1, 1048566, 458752, 1, 1114102, 458752, 1, 1179638, 458752, 1, 1048567, 458752, 1, 1114103, 458752, 1, 1179639, 458752, 1, 1048568, 458752, 1, 1114104, 458752, 1, 1179640, 458752, 1, 1048569, 458752, 1, 1114105, 458752, 1, 1179641, 458752, 1, 1048570, 458752, 1, 1114106, 458752, 1, 1179642, 458752, 1, 1048571, 458752, 1, 1114107, 458752, 1, 1179643, 458752, 1, 1048572, 458752, 1, 1114108, 458752, 1, 1179644, 458752, 1, 1048573, 458752, 1, 1114109, 458752, 1, 1179645, 458752, 1, 1048574, 458752, 1, 1114110, 458752, 1, 1179646, 458752, 1, 1048575, 458752, 1, 1114111, 458752, 1, 1179647, 458752, 1, 983040, 458752, 1, 1048576, 458752, 1, 1114112, 458752, 1, 983041, 458752, 1, 1048577, 458752, 1, 1114113, 458752, 1, 983042, 458752, 1, 1048578, 458752, 1, 1114114, 458752, 1, 983043, 458752, 1, 1048579, 458752, 1, 1114115, 458752, 1, 983044, 458752, 1, 1048580, 458752, 1, 1114116, 458752, 1, 983045, 458752, 1, 1048581, 458752, 1, 1114117, 458752, 1, 983046, 458752, 1, 1048582, 458752, 1, 1114118, 458752, 1, 983047, 458752, 1, 1048583, 458752, 1, 1114119, 458752, 1, 983048, 458752, 1, 1048584, 458752, 1, 1114120, 458752, 1, 983049, 458752, 1, 1048585, 458752, 1, 1114121, 458752, 1, 983050, 458752, 1, 1048586, 458752, 1, 1114122, 458752, 1, 983051, 458752, 1, 1048587, 458752, 1, 1114123, 458752, 1, 983052, 458752, 1, 1048588, 458752, 1, 1114124, 458752, 1, 983053, 458752, 1, 1048589, 458752, 1, 1114125, 458752, 1, 983054, 458752, 1, 1048590, 458752, 1, 1114126, 458752, 1, 983055, 458752, 1, 1048591, 458752, 1, 1114127, 458752, 1, 983056, 458752, 1, 1048592, 458752, 1, 1114128, 458752, 1, 983057, 458752, 1, 1048593, 458752, 1, 1114129, 458752, 1, 983058, 458752, 1, 1048594, 458752, 1, 1114130, 458752, 1, 983059, 458752, 1, 1048595, 458752, 1, 1114131, 458752, 1, 983060, 458752, 1, 1048596, 458752, 1, 1114132, 458752, 1, 983061, 458752, 1, 1048597, 458752, 1, 1114133, 458752, 1, 983062, 458752, 1, 1048598, 458752, 1, 1114134, 458752, 1, 983063, 458752, 1, 1048599, 458752, 1, 1114135, 458752, 1, 983064, 458752, 1, 1048600, 458752, 1, 1114136, 458752, 1, 983065, 458752, 1, 1048601, 458752, 1, 1114137, 458752, 1, 983066, 458752, 1, 1048602, 458752, 1, 1114138, 458752, 1, 983067, 458752, 1, 1048603, 458752, 1, 1114139, 458752, 1, 983068, 458752, 1, 1048604, 458752, 1, 1114140, 458752, 1, 983069, 458752, 1, 1048605, 458752, 1, 1114141, 458752, 1, 983070, 458752, 1, 1048606, 458752, 1, 1114142, 458752, 1, 983071, 458752, 1, 1048607, 458752, 1, 1114143, 458752, 1, 983072, 458752, 1, 1048608, 458752, 1, 1114144, 458752, 1, 983073, 458752, 1, 1048609, 458752, 1, 1114145, 458752, 1, 983074, 458752, 1, 1048610, 458752, 1, 1114146, 458752, 1, 983075, 458752, 1, 1048611, 458752, 1, 1114147, 458752, 1, 983076, 458752, 1, 1048612, 458752, 1, 1114148, 458752, 1, 983077, 458752, 1, 1048613, 458752, 1, 1114149, 458752, 1, 786470, 524288, 1, 852006, 524288, 1, 917542, 524288, 1, 983078, 524288, 1, 1048614, 524288, 1, 1114150, 524288, 1, 1179612, 393216, 1, 1048540, 393216, 1, 1114076, 393216, 1, 851932, 393216, 1, 917468, 393216, 1, 983004, 393216, 1, 1245149, 458752, 1, 1310685, 458752, 1, 1376221, 458752, 1, 1441757, 458752, 1, 1507293, 458752, 1, 1572829, 458752, 1, 1638365, 458752, 1, 1703901, 458752, 1, 1769437, 458752, 1, 1834973, 458752, 1, 1900509, 458752, 1, 1966045, 458752, 2, 1245150, 458752, 1, 1310686, 458752, 1, 1376222, 458752, 1, 1441758, 458752, 1, 1507294, 458752, 1, 1572830, 458752, 1, 1638366, 458752, 1, 1703902, 458752, 1, 1769438, 458752, 1, 1834974, 458752, 1, 1900510, 458752, 1, 1966046, 458752, 2, 1245151, 458752, 1, 1310687, 458752, 1, 1376223, 458752, 1, 1441759, 458752, 1, 1507295, 458752, 1, 1572831, 458752, 1, 1638367, 458752, 1, 1703903, 458752, 1, 1769439, 458752, 1, 1834975, 458752, 1, 1900511, 458752, 1, 1966047, 458752, 2, 1245152, 458752, 1, 1310688, 458752, 1, 1376224, 458752, 1, 1441760, 458752, 1, 1507296, 458752, 1, 1572832, 458752, 1, 1638368, 458752, 1, 1703904, 458752, 1, 1769440, 458752, 1, 1834976, 458752, 1, 1900512, 458752, 1, 1966048, 458752, 2, 1245153, 458752, 1, 1310689, 458752, 1, 1376225, 458752, 1, 1441761, 458752, 1, 1507297, 458752, 1, 1572833, 458752, 1, 1638369, 458752, 1, 1703905, 458752, 1, 1769441, 458752, 1, 1834977, 458752, 1, 1900513, 458752, 1, 1966049, 458752, 2, 1245154, 458752, 1, 1310690, 458752, 1, 1376226, 458752, 1, 1441762, 458752, 1, 1507298, 458752, 1, 1572834, 458752, 1, 1638370, 458752, 1, 1703906, 458752, 1, 1769442, 458752, 1, 1834978, 458752, 1, 1900514, 458752, 1, 1966050, 458752, 2, 1245155, 458752, 1, 1310691, 458752, 1, 1376227, 458752, 1, 1441763, 458752, 1, 1507299, 458752, 1, 1572835, 458752, 1, 1638371, 458752, 1, 1703907, 458752, 1, 1769443, 458752, 1, 1834979, 458752, 1, 1900515, 458752, 1, 1966051, 458752, 2, 1245156, 458752, 1, 1310692, 458752, 1, 1376228, 458752, 1, 1441764, 458752, 1, 1507300, 458752, 1, 1572836, 458752, 1, 1638372, 458752, 1, 1703908, 458752, 1, 1769444, 458752, 1, 1834980, 458752, 1, 1900516, 458752, 1, 1966052, 458752, 2, 1245157, 458752, 1, 1310693, 458752, 1, 1376229, 458752, 1, 1441765, 458752, 1, 1507301, 458752, 1, 1572837, 458752, 1, 1638373, 458752, 1, 1703909, 458752, 1, 1769445, 458752, 1, 1834981, 458752, 1, 1900517, 458752, 1, 1966053, 458752, 2, 1245158, 458752, 1, 1310694, 458752, 1, 1376230, 458752, 1, 1441766, 458752, 1, 1507302, 458752, 1, 1572838, 458752, 1, 1638374, 458752, 1, 1703910, 458752, 1, 1769446, 458752, 1, 1834982, 458752, 1, 1900518, 458752, 1, 1966054, 458752, 2, 1245159, 458752, 1, 1310695, 458752, 1, 1376231, 458752, 1, 1441767, 458752, 1, 1507303, 458752, 1, 1572839, 458752, 1, 1638375, 458752, 1, 1703911, 458752, 1, 1769447, 458752, 1, 1834983, 458752, 1, 1900519, 458752, 1, 1966055, 458752, 2, 1245160, 458752, 1, 1310696, 458752, 1, 1376232, 458752, 1, 1441768, 458752, 1, 1507304, 458752, 1, 1572840, 458752, 1, 1638376, 458752, 1, 1703912, 458752, 1, 1769448, 458752, 1, 1834984, 458752, 1, 1900520, 458752, 1, 1966056, 458752, 2, 1245161, 458752, 1, 1310697, 458752, 1, 1376233, 458752, 1, 1441769, 458752, 1, 1507305, 458752, 1, 1572841, 458752, 1, 1638377, 458752, 1, 1703913, 458752, 1, 1769449, 458752, 1, 1834985, 458752, 1, 1900521, 458752, 1, 1966057, 458752, 2, 1245162, 458752, 1, 1310698, 458752, 1, 1376234, 458752, 1, 1441770, 458752, 1, 1507306, 458752, 1, 1572842, 458752, 1, 1638378, 458752, 1, 1703914, 458752, 1, 1769450, 458752, 1, 1834986, 458752, 1, 1900522, 458752, 1, 1966058, 458752, 2, 1245163, 458752, 1, 1310699, 458752, 1, 1376235, 458752, 1, 1441771, 458752, 1, 1507307, 458752, 1, 1572843, 458752, 1, 1638379, 458752, 1, 1703915, 458752, 1, 1769451, 458752, 1, 1834987, 458752, 1, 1900523, 458752, 1, 1966059, 458752, 2, 1245164, 458752, 1, 1310700, 458752, 1, 1376236, 458752, 1, 1441772, 458752, 1, 1507308, 458752, 1, 1572844, 458752, 1, 1638380, 458752, 1, 1703916, 458752, 1, 1769452, 458752, 1, 1834988, 458752, 1, 1900524, 458752, 1, 1966060, 458752, 2, 1245165, 458752, 1, 1310701, 458752, 1, 1376237, 458752, 1, 1441773, 458752, 1, 1507309, 458752, 1, 1572845, 458752, 1, 1638381, 458752, 1, 1703917, 458752, 1, 1769453, 458752, 1, 1834989, 458752, 1, 1900525, 458752, 1, 1966061, 458752, 2, 1245166, 458752, 1, 1310702, 458752, 1, 1376238, 458752, 1, 1441774, 458752, 1, 1507310, 458752, 1, 1572846, 458752, 1, 1638382, 458752, 1, 1703918, 458752, 1, 1769454, 458752, 1, 1834990, 458752, 1, 1900526, 458752, 1, 1966062, 458752, 2, 1245167, 458752, 1, 1310703, 458752, 1, 1376239, 458752, 1, 1441775, 458752, 1, 1507311, 458752, 1, 1572847, 458752, 1, 1638383, 458752, 1, 1703919, 458752, 1, 1769455, 458752, 1, 1834991, 458752, 1, 1900527, 458752, 1, 1966063, 458752, 2, 1245168, 458752, 1, 1310704, 458752, 1, 1376240, 458752, 1, 1441776, 458752, 1, 1507312, 458752, 1, 1572848, 458752, 1, 1638384, 458752, 1, 1703920, 458752, 1, 1769456, 458752, 1, 1834992, 458752, 1, 1900528, 458752, 1, 1966064, 458752, 2, 1245169, 458752, 1, 1310705, 458752, 1, 1376241, 458752, 1, 1441777, 458752, 1, 1507313, 458752, 1, 1572849, 458752, 1, 1638385, 458752, 1, 1703921, 458752, 1, 1769457, 458752, 1, 1834993, 458752, 1, 1900529, 458752, 1, 1966065, 458752, 2, 1245170, 458752, 1, 1310706, 458752, 1, 1376242, 458752, 1, 1441778, 458752, 1, 1507314, 458752, 1, 1572850, 458752, 1, 1638386, 458752, 1, 1703922, 458752, 1, 1769458, 458752, 1, 1834994, 458752, 1, 1900530, 458752, 1, 1966066, 458752, 2, 1245171, 458752, 1, 1310707, 458752, 1, 1376243, 458752, 1, 1441779, 458752, 1, 1507315, 458752, 1, 1572851, 458752, 1, 1638387, 458752, 1, 1703923, 458752, 1, 1769459, 458752, 1, 1834995, 458752, 1, 1900531, 458752, 1, 1966067, 458752, 2, 1245172, 458752, 1, 1310708, 458752, 1, 1376244, 458752, 1, 1441780, 458752, 1, 1507316, 458752, 1, 1572852, 458752, 1, 1638388, 458752, 1, 1703924, 458752, 1, 1769460, 458752, 1, 1834996, 458752, 1, 1900532, 458752, 1, 1966068, 458752, 2, 1245173, 458752, 1, 1310709, 458752, 1, 1376245, 458752, 1, 1441781, 458752, 1, 1507317, 458752, 1, 1572853, 458752, 1, 1638389, 458752, 1, 1703925, 458752, 1, 1769461, 458752, 1, 1834997, 458752, 1, 1900533, 458752, 1, 1966069, 458752, 2, 1245174, 458752, 1, 1310710, 458752, 1, 1376246, 458752, 1, 1441782, 458752, 1, 1507318, 458752, 1, 1572854, 458752, 1, 1638390, 458752, 1, 1703926, 458752, 1, 1769462, 458752, 1, 1834998, 458752, 1, 1900534, 458752, 1, 1966070, 458752, 2, 1245175, 458752, 1, 1310711, 458752, 1, 1376247, 458752, 1, 1441783, 458752, 1, 1507319, 458752, 1, 1572855, 458752, 1, 1638391, 458752, 1, 1703927, 458752, 1, 1769463, 458752, 1, 1834999, 458752, 1, 1900535, 458752, 1, 1966071, 458752, 2, 1245176, 458752, 1, 1310712, 458752, 1, 1376248, 458752, 1, 1441784, 458752, 1, 1507320, 458752, 1, 1572856, 458752, 1, 1638392, 458752, 1, 1703928, 458752, 1, 1769464, 458752, 1, 1835000, 458752, 1, 1900536, 458752, 1, 1966072, 458752, 2, 1245177, 458752, 1, 1310713, 458752, 1, 1376249, 458752, 1, 1441785, 458752, 1, 1507321, 458752, 1, 1572857, 458752, 1, 1638393, 458752, 1, 1703929, 458752, 1, 1769465, 458752, 1, 1835001, 458752, 1, 1900537, 458752, 1, 1966073, 458752, 2, 1245178, 458752, 1, 1310714, 458752, 1, 1376250, 458752, 1, 1441786, 458752, 1, 1507322, 458752, 1, 1572858, 458752, 1, 1638394, 458752, 1, 1703930, 458752, 1, 1769466, 458752, 1, 1835002, 458752, 1, 1900538, 458752, 1, 1966074, 458752, 2, 1245179, 458752, 1, 1310715, 458752, 1, 1376251, 458752, 1, 1441787, 458752, 1, 1507323, 458752, 1, 1572859, 458752, 1, 1638395, 458752, 1, 1703931, 458752, 1, 1769467, 458752, 1, 1835003, 458752, 1, 1900539, 458752, 1, 1966075, 458752, 2, 1245180, 458752, 1, 1310716, 458752, 1, 1376252, 458752, 1, 1441788, 458752, 1, 1507324, 458752, 1, 1572860, 458752, 1, 1638396, 458752, 1, 1703932, 458752, 1, 1769468, 458752, 1, 1835004, 458752, 1, 1900540, 458752, 1, 1966076, 458752, 2, 1245181, 458752, 1, 1310717, 458752, 1, 1376253, 458752, 1, 1441789, 458752, 1, 1507325, 458752, 1, 1572861, 458752, 1, 1638397, 458752, 1, 1703933, 458752, 1, 1769469, 458752, 1, 1835005, 458752, 1, 1900541, 458752, 1, 1966077, 458752, 2, 1245182, 458752, 1, 1310718, 458752, 1, 1376254, 458752, 1, 1441790, 458752, 1, 1507326, 458752, 1, 1572862, 458752, 1, 1638398, 458752, 1, 1703934, 458752, 1, 1769470, 458752, 1, 1835006, 458752, 1, 1900542, 458752, 1, 1966078, 458752, 2, 1245183, 458752, 1, 1310719, 458752, 1, 1376255, 458752, 1, 1441791, 458752, 1, 1507327, 458752, 1, 1572863, 458752, 1, 1638399, 458752, 1, 1703935, 458752, 1, 1769471, 458752, 1, 1835007, 458752, 1, 1900543, 458752, 1, 1966079, 458752, 2, 1179648, 458752, 1, 1245184, 458752, 1, 1310720, 458752, 1, 1376256, 458752, 1, 1441792, 458752, 1, 1507328, 458752, 1, 1572864, 458752, 1, 1638400, 458752, 1, 1703936, 458752, 1, 1769472, 458752, 1, 1835008, 458752, 1, 1900544, 458752, 2, 1179649, 458752, 1, 1245185, 458752, 1, 1310721, 458752, 1, 1376257, 458752, 1, 1441793, 458752, 1, 1507329, 458752, 1, 1572865, 458752, 1, 1638401, 458752, 1, 1703937, 458752, 1, 1769473, 458752, 1, 1835009, 458752, 1, 1900545, 458752, 2, 1179650, 458752, 1, 1245186, 458752, 1, 1310722, 458752, 1, 1376258, 458752, 1, 1441794, 458752, 1, 1507330, 458752, 1, 1572866, 458752, 1, 1638402, 458752, 1, 1703938, 458752, 1, 1769474, 458752, 1, 1835010, 458752, 1, 1900546, 458752, 2, 1179651, 458752, 1, 1245187, 458752, 1, 1310723, 458752, 1, 1376259, 458752, 1, 1441795, 458752, 1, 1507331, 458752, 1, 1572867, 458752, 1, 1638403, 458752, 1, 1703939, 458752, 1, 1769475, 458752, 1, 1835011, 458752, 1, 1900547, 458752, 2, 1179652, 458752, 1, 1245188, 458752, 1, 1310724, 458752, 1, 1376260, 458752, 1, 1441796, 458752, 1, 1507332, 458752, 1, 1572868, 458752, 1, 1638404, 458752, 1, 1703940, 458752, 1, 1769476, 458752, 1, 1835012, 458752, 1, 1900548, 458752, 2, 1179653, 458752, 1, 1245189, 458752, 1, 1310725, 458752, 1, 1376261, 458752, 1, 1441797, 458752, 1, 1507333, 458752, 1, 1572869, 458752, 1, 1638405, 458752, 1, 1703941, 458752, 1, 1769477, 458752, 1, 1835013, 458752, 1, 1900549, 458752, 2, 1179654, 458752, 1, 1245190, 458752, 1, 1310726, 458752, 1, 1376262, 458752, 1, 1441798, 458752, 1, 1507334, 458752, 1, 1572870, 458752, 1, 1638406, 458752, 1, 1703942, 458752, 1, 1769478, 458752, 1, 1835014, 458752, 1, 1900550, 458752, 2, 1179655, 458752, 1, 1245191, 458752, 1, 1310727, 458752, 1, 1376263, 458752, 1, 1441799, 458752, 1, 1507335, 458752, 1, 1572871, 458752, 1, 1638407, 458752, 1, 1703943, 458752, 1, 1769479, 458752, 1, 1835015, 458752, 1, 1900551, 458752, 2, 1179656, 458752, 1, 1245192, 458752, 1, 1310728, 458752, 1, 1376264, 458752, 1, 1441800, 458752, 1, 1507336, 458752, 1, 1572872, 458752, 1, 1638408, 458752, 1, 1703944, 458752, 1, 1769480, 458752, 1, 1835016, 458752, 1, 1900552, 458752, 2, 1179657, 458752, 1, 1245193, 458752, 1, 1310729, 458752, 1, 1376265, 458752, 1, 1441801, 458752, 1, 1507337, 458752, 1, 1572873, 458752, 1, 1638409, 458752, 1, 1703945, 458752, 1, 1769481, 458752, 1, 1835017, 458752, 1, 1900553, 458752, 2, 1179658, 458752, 1, 1245194, 458752, 1, 1310730, 458752, 1, 1376266, 458752, 1, 1441802, 458752, 1, 1507338, 458752, 1, 1572874, 458752, 1, 1638410, 458752, 1, 1703946, 458752, 1, 1769482, 458752, 1, 1835018, 458752, 1, 1900554, 458752, 2, 1179659, 458752, 1, 1245195, 458752, 1, 1310731, 458752, 1, 1376267, 458752, 1, 1441803, 458752, 1, 1507339, 458752, 1, 1572875, 458752, 1, 1638411, 458752, 1, 1703947, 458752, 1, 1769483, 458752, 1, 1835019, 458752, 1, 1900555, 458752, 2, 1179660, 458752, 1, 1245196, 458752, 1, 1310732, 458752, 1, 1376268, 458752, 1, 1441804, 458752, 1, 1507340, 458752, 1, 1572876, 458752, 1, 1638412, 458752, 1, 1703948, 458752, 1, 1769484, 458752, 1, 1835020, 458752, 1, 1900556, 458752, 2, 1179661, 458752, 1, 1245197, 458752, 1, 1310733, 458752, 1, 1376269, 458752, 1, 1441805, 458752, 1, 1507341, 458752, 1, 1572877, 458752, 1, 1638413, 458752, 1, 1703949, 458752, 1, 1769485, 458752, 1, 1835021, 458752, 1, 1900557, 458752, 2, 1179662, 458752, 1, 1245198, 458752, 1, 1310734, 458752, 1, 1376270, 458752, 1, 1441806, 458752, 1, 1507342, 458752, 1, 1572878, 458752, 1, 1638414, 458752, 1, 1703950, 458752, 1, 1769486, 458752, 1, 1835022, 458752, 1, 1900558, 458752, 2, 1179663, 458752, 1, 1245199, 458752, 1, 1310735, 458752, 1, 1376271, 458752, 1, 1441807, 458752, 1, 1507343, 458752, 1, 1572879, 458752, 1, 1638415, 458752, 1, 1703951, 458752, 1, 1769487, 458752, 1, 1835023, 458752, 1, 1900559, 458752, 2, 1179664, 458752, 1, 1245200, 458752, 1, 1310736, 458752, 1, 1376272, 458752, 1, 1441808, 458752, 1, 1507344, 458752, 1, 1572880, 458752, 1, 1638416, 458752, 1, 1703952, 458752, 1, 1769488, 458752, 1, 1835024, 458752, 1, 1900560, 458752, 2, 1179665, 458752, 1, 1245201, 458752, 1, 1310737, 458752, 1, 1376273, 458752, 1, 1441809, 458752, 1, 1507345, 458752, 1, 1572881, 458752, 1, 1638417, 458752, 1, 1703953, 458752, 1, 1769489, 458752, 1, 1835025, 458752, 1, 1900561, 458752, 2, 1179666, 458752, 1, 1245202, 458752, 1, 1310738, 458752, 1, 1376274, 458752, 1, 1441810, 458752, 1, 1507346, 458752, 1, 1572882, 458752, 1, 1638418, 458752, 1, 1703954, 458752, 1, 1769490, 458752, 1, 1835026, 458752, 1, 1900562, 458752, 2, 1179667, 458752, 1, 1245203, 458752, 1, 1310739, 458752, 1, 1376275, 458752, 1, 1441811, 458752, 1, 1507347, 458752, 1, 1572883, 458752, 1, 1638419, 458752, 1, 1703955, 458752, 1, 1769491, 458752, 1, 1835027, 458752, 1, 1900563, 458752, 2, 1179668, 458752, 1, 1245204, 458752, 1, 1310740, 458752, 1, 1376276, 458752, 1, 1441812, 458752, 1, 1507348, 458752, 1, 1572884, 458752, 1, 1638420, 458752, 1, 1703956, 458752, 1, 1769492, 458752, 1, 1835028, 458752, 1, 1900564, 458752, 2, 1179669, 458752, 1, 1245205, 458752, 1, 1310741, 458752, 1, 1376277, 458752, 1, 1441813, 458752, 1, 1507349, 458752, 1, 1572885, 458752, 1, 1638421, 458752, 1, 1703957, 458752, 1, 1769493, 458752, 1, 1835029, 458752, 1, 1900565, 458752, 2, 1179670, 458752, 1, 1245206, 458752, 1, 1310742, 458752, 1, 1376278, 458752, 1, 1441814, 458752, 1, 1507350, 458752, 1, 1572886, 458752, 1, 1638422, 458752, 1, 1703958, 458752, 1, 1769494, 458752, 1, 1835030, 458752, 1, 1900566, 458752, 2, 1179671, 458752, 1, 1245207, 458752, 1, 1310743, 458752, 1, 1376279, 458752, 1, 1441815, 458752, 1, 1507351, 458752, 1, 1572887, 458752, 1, 1638423, 458752, 1, 1703959, 458752, 1, 1769495, 458752, 1, 1835031, 458752, 1, 1900567, 458752, 2, 1179672, 458752, 1, 1245208, 458752, 1, 1310744, 458752, 1, 1376280, 458752, 1, 1441816, 458752, 1, 1507352, 458752, 1, 1572888, 458752, 1, 1638424, 458752, 1, 1703960, 458752, 1, 1769496, 458752, 1, 1835032, 458752, 1, 1900568, 458752, 2, 1179673, 458752, 1, 1245209, 458752, 1, 1310745, 458752, 1, 1376281, 458752, 1, 1441817, 458752, 1, 1507353, 458752, 1, 1572889, 458752, 1, 1638425, 458752, 1, 1703961, 458752, 1, 1769497, 458752, 1, 1835033, 458752, 1, 1900569, 458752, 2, 1179674, 458752, 1, 1245210, 458752, 1, 1310746, 458752, 1, 1376282, 458752, 1, 1441818, 458752, 1, 1507354, 458752, 1, 1572890, 458752, 1, 1638426, 458752, 1, 1703962, 458752, 1, 1769498, 458752, 1, 1835034, 458752, 1, 1900570, 458752, 2, 1179675, 458752, 1, 1245211, 458752, 1, 1310747, 458752, 1, 1376283, 458752, 1, 1441819, 458752, 1, 1507355, 458752, 1, 1572891, 458752, 1, 1638427, 458752, 1, 1703963, 458752, 1, 1769499, 458752, 1, 1835035, 458752, 1, 1900571, 458752, 2, 1179676, 458752, 1, 1245212, 458752, 1, 1310748, 458752, 1, 1376284, 458752, 1, 1441820, 458752, 1, 1507356, 458752, 1, 1572892, 458752, 1, 1638428, 458752, 1, 1703964, 458752, 1, 1769500, 458752, 1, 1835036, 458752, 1, 1900572, 458752, 2, 1179677, 458752, 1, 1245213, 458752, 1, 1310749, 458752, 1, 1376285, 458752, 1, 1441821, 458752, 1, 1507357, 458752, 1, 1572893, 458752, 1, 1638429, 458752, 1, 1703965, 458752, 1, 1769501, 458752, 1, 1835037, 458752, 1, 1900573, 458752, 2, 1179678, 458752, 1, 1245214, 458752, 1, 1310750, 458752, 1, 1376286, 458752, 1, 1441822, 458752, 1, 1507358, 458752, 1, 1572894, 458752, 1, 1638430, 458752, 1, 1703966, 458752, 1, 1769502, 458752, 1, 1835038, 458752, 1, 1900574, 458752, 2, 1179679, 458752, 1, 1245215, 458752, 1, 1310751, 458752, 1, 1376287, 458752, 1, 1441823, 458752, 1, 1507359, 458752, 1, 1572895, 458752, 1, 1638431, 458752, 1, 1703967, 458752, 1, 1769503, 458752, 1, 1835039, 458752, 1, 1900575, 458752, 2, 1179680, 458752, 1, 1245216, 458752, 1, 1310752, 458752, 1, 1376288, 458752, 1, 1441824, 458752, 1, 1507360, 458752, 1, 1572896, 458752, 1, 1638432, 458752, 1, 1703968, 458752, 1, 1769504, 458752, 1, 1835040, 458752, 1, 1900576, 458752, 2, 1179681, 458752, 1, 1245217, 458752, 1, 1310753, 458752, 1, 1376289, 458752, 1, 1441825, 458752, 1, 1507361, 458752, 1, 1572897, 458752, 1, 1638433, 458752, 1, 1703969, 458752, 1, 1769505, 458752, 1, 1835041, 458752, 1, 1900577, 458752, 2, 1179682, 458752, 1, 1245218, 458752, 1, 1310754, 458752, 1, 1376290, 458752, 1, 1441826, 458752, 1, 1507362, 458752, 1, 1572898, 458752, 1, 1638434, 458752, 1, 1703970, 458752, 1, 1769506, 458752, 1, 1835042, 458752, 1, 1900578, 458752, 2, 1179683, 458752, 1, 1245219, 458752, 1, 1310755, 458752, 1, 1376291, 458752, 1, 1441827, 458752, 1, 1507363, 458752, 1, 1572899, 458752, 1, 1638435, 458752, 1, 1703971, 458752, 1, 1769507, 458752, 1, 1835043, 458752, 1, 1900579, 458752, 2, 1179684, 458752, 1, 1245220, 458752, 1, 1310756, 458752, 1, 1376292, 458752, 1, 1441828, 458752, 1, 1507364, 458752, 1, 1572900, 458752, 1, 1638436, 458752, 1, 1703972, 458752, 1, 1769508, 458752, 1, 1835044, 458752, 1, 1900580, 458752, 2, 1179685, 458752, 1, 1245221, 458752, 1, 1310757, 458752, 1, 1376293, 458752, 1, 1441829, 458752, 1, 1507365, 458752, 1, 1572901, 458752, 1, 1638437, 458752, 1, 1703973, 458752, 1, 1769509, 458752, 1, 1835045, 458752, 1, 1900581, 458752, 2, 1179686, 524288, 1, 1245222, 524288, 1, 1310758, 524288, 1, 1376294, 524288, 1, 1441830, 524288, 1, 1507366, 524288, 1, 1572902, 524288, 1, 1638438, 524288, 1, 1703974, 524288, 1, 1769510, 524288, 1, 1835046, 524288, 1, 1900582, 524288, 2, 1245148, 393216, 1, 1310684, 393216, 1, 1376220, 393216, 1, 1441756, 393216, 1, 1507292, 393216, 1, 1572828, 393216, 1, 1638364, 393216, 1, 1703900, 393216, 1, 1769436, 393216, 1, 1834972, 393216, 1, 1900508, 393216, 1, 1966044, 393216, 2)
layer_1/name = "background_1"
layer_1/enabled = true
layer_1/modulate = Color(1, 1, 1, 1)
layer_1/y_sort_enabled = false
layer_1/y_sort_origin = 0
layer_1/z_index = 0
layer_1/tile_data = PackedInt32Array(327644, 983040, 1, -524324, 983040, 0, -458788, 983040, 1, -393252, 983040, 1, -327716, 983040, 1, -262180, 983040, 1, -196644, 983040, 1, -131108, 983040, 1, -65572, 983040, 1, -36, 983040, 1, 65500, 983040, 1, 131036, 983040, 1, 196572, 983040, 1, 262108, 983040, 1, -524250, 983040, 1, -458714, 983040, 1, -393178, 983040, 1, -327642, 983040, 1, -262106, 983040, 1, -196570, 983040, 1, -131034, 983040, 1, -65498, 983040, 1, 38, 983040, 1, 65574, 983040, 1, 131110, 983040, 1, 196646, 983040, 1, 262182, 983040, 1, -589786, 983040, 0)
layer_2/name = "platforms"
layer_2/enabled = true
layer_2/modulate = Color(1, 1, 1, 1)
layer_2/y_sort_enabled = false
layer_2/y_sort_origin = 0
layer_2/z_index = 0
layer_2/tile_data = PackedInt32Array()
layer_3/name = "enemies"
layer_3/enabled = true
layer_3/modulate = Color(1, 1, 1, 1)
layer_3/y_sort_enabled = false
layer_3/y_sort_origin = 0
layer_3/z_index = 0
layer_3/tile_data = PackedInt32Array()

[node name="PlayerCamera" type="Camera2D" parent="." node_paths=PackedStringArray("player")]
script = ExtResource("18_80blo")
player = NodePath("../Playerlayer/Player")
settings_preset = SubResource("Resource_6vfpg")

[node name="Debug" type="Node2D" parent="PlayerCamera"]
script = ExtResource("20_opq1y")
debug = true
